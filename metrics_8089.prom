# HELP application_ready_time_seconds Time taken for the application to be ready to service requests
# TYPE application_ready_time_seconds gauge
application_ready_time_seconds{main_application_class="com.tcc.notification_service.NotificationServiceApplication"} 49.892
# HELP application_started_time_seconds Time taken to start the application
# TYPE application_started_time_seconds gauge
application_started_time_seconds{main_application_class="com.tcc.notification_service.NotificationServiceApplication"} 49.862
# HELP disk_free_bytes Usable space for path
# TYPE disk_free_bytes gauge
disk_free_bytes{path="/app/."} 1.014770343936E12
# HELP disk_total_bytes Total space for path
# TYPE disk_total_bytes gauge
disk_total_bytes{path="/app/."} 1.081101176832E12
# HELP executor_active_threads The approximate number of threads that are actively executing tasks
# TYPE executor_active_threads gauge
executor_active_threads{name="applicationTaskExecutor"} 0.0
# HELP executor_completed_tasks_total The approximate total number of tasks that have completed execution
# TYPE executor_completed_tasks_total counter
executor_completed_tasks_total{name="applicationTaskExecutor"} 0.0
# HELP executor_pool_core_threads The core number of threads for the pool
# TYPE executor_pool_core_threads gauge
executor_pool_core_threads{name="applicationTaskExecutor"} 8.0
# HELP executor_pool_max_threads The maximum allowed number of threads in the pool
# TYPE executor_pool_max_threads gauge
executor_pool_max_threads{name="applicationTaskExecutor"} 2.147483647E9
# HELP executor_pool_size_threads The current number of threads in the pool
# TYPE executor_pool_size_threads gauge
executor_pool_size_threads{name="applicationTaskExecutor"} 0.0
# HELP executor_queue_remaining_tasks The number of additional elements that this queue can ideally accept without blocking
# TYPE executor_queue_remaining_tasks gauge
executor_queue_remaining_tasks{name="applicationTaskExecutor"} 2.147483647E9
# HELP executor_queued_tasks The approximate number of tasks that are queued for execution
# TYPE executor_queued_tasks gauge
executor_queued_tasks{name="applicationTaskExecutor"} 0.0
# HELP hikaricp_connections Total connections
# TYPE hikaricp_connections gauge
hikaricp_connections{pool="HikariPool-1"} 10.0
# HELP hikaricp_connections_acquire_seconds Connection acquire time
# TYPE hikaricp_connections_acquire_seconds summary
hikaricp_connections_acquire_seconds_count{pool="HikariPool-1"} 624
hikaricp_connections_acquire_seconds_sum{pool="HikariPool-1"} 383.932747421
# HELP hikaricp_connections_acquire_seconds_max Connection acquire time
# TYPE hikaricp_connections_acquire_seconds_max gauge
hikaricp_connections_acquire_seconds_max{pool="HikariPool-1"} 0.0
# HELP hikaricp_connections_active Active connections
# TYPE hikaricp_connections_active gauge
hikaricp_connections_active{pool="HikariPool-1"} 0.0
# HELP hikaricp_connections_creation_seconds Connection creation time
# TYPE hikaricp_connections_creation_seconds summary
hikaricp_connections_creation_seconds_count{pool="HikariPool-1"} 82
hikaricp_connections_creation_seconds_sum{pool="HikariPool-1"} 230.972
# HELP hikaricp_connections_creation_seconds_max Connection creation time
# TYPE hikaricp_connections_creation_seconds_max gauge
hikaricp_connections_creation_seconds_max{pool="HikariPool-1"} 0.021
# HELP hikaricp_connections_idle Idle connections
# TYPE hikaricp_connections_idle gauge
hikaricp_connections_idle{pool="HikariPool-1"} 10.0
# HELP hikaricp_connections_max Max connections
# TYPE hikaricp_connections_max gauge
hikaricp_connections_max{pool="HikariPool-1"} 10.0
# HELP hikaricp_connections_min Min connections
# TYPE hikaricp_connections_min gauge
hikaricp_connections_min{pool="HikariPool-1"} 10.0
# HELP hikaricp_connections_pending Pending threads
# TYPE hikaricp_connections_pending gauge
hikaricp_connections_pending{pool="HikariPool-1"} 0.0
# HELP hikaricp_connections_timeout_total Connection timeout total count
# TYPE hikaricp_connections_timeout_total counter
hikaricp_connections_timeout_total{pool="HikariPool-1"} 0.0
# HELP hikaricp_connections_usage_seconds Connection usage time
# TYPE hikaricp_connections_usage_seconds summary
hikaricp_connections_usage_seconds_count{pool="HikariPool-1"} 624
hikaricp_connections_usage_seconds_sum{pool="HikariPool-1"} 1458.691
# HELP hikaricp_connections_usage_seconds_max Connection usage time
# TYPE hikaricp_connections_usage_seconds_max gauge
hikaricp_connections_usage_seconds_max{pool="HikariPool-1"} 0.0
# HELP http_server_requests_active_seconds  
# TYPE http_server_requests_active_seconds summary
http_server_requests_active_seconds_count{exception="none",method="GET",outcome="SUCCESS",status="200",uri="UNKNOWN"} 1
http_server_requests_active_seconds_sum{exception="none",method="GET",outcome="SUCCESS",status="200",uri="UNKNOWN"} 0.002591603
# HELP http_server_requests_active_seconds_max  
# TYPE http_server_requests_active_seconds_max gauge
http_server_requests_active_seconds_max{exception="none",method="GET",outcome="SUCCESS",status="200",uri="UNKNOWN"} 0.002593003
# HELP http_server_requests_seconds  
# TYPE http_server_requests_seconds summary
http_server_requests_seconds_count{error="IOException",exception="IOException",method="GET",outcome="SUCCESS",status="200",uri="/actuator/prometheus"} 61
http_server_requests_seconds_sum{error="IOException",exception="IOException",method="GET",outcome="SUCCESS",status="200",uri="/actuator/prometheus"} 1946.72269098
http_server_requests_seconds_count{error="none",exception="none",method="GET",outcome="CLIENT_ERROR",status="400",uri="/notificacoes/{pedidoId}"} 6855
http_server_requests_seconds_sum{error="none",exception="none",method="GET",outcome="CLIENT_ERROR",status="400",uri="/notificacoes/{pedidoId}"} 144.750968058
http_server_requests_seconds_count{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/actuator/prometheus"} 2630
http_server_requests_seconds_sum{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/actuator/prometheus"} 51.325469235
http_server_requests_seconds_count{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/notificacoes"} 424
http_server_requests_seconds_sum{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/notificacoes"} 2956.560610555
http_server_requests_seconds_count{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/notificacoes/{pedidoId}"} 200
http_server_requests_seconds_sum{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/notificacoes/{pedidoId}"} 0.906134973
# HELP http_server_requests_seconds_max  
# TYPE http_server_requests_seconds_max gauge
http_server_requests_seconds_max{error="IOException",exception="IOException",method="GET",outcome="SUCCESS",status="200",uri="/actuator/prometheus"} 0.0
http_server_requests_seconds_max{error="none",exception="none",method="GET",outcome="CLIENT_ERROR",status="400",uri="/notificacoes/{pedidoId}"} 0.0
http_server_requests_seconds_max{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/actuator/prometheus"} 0.042126921
http_server_requests_seconds_max{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/notificacoes"} 0.0
http_server_requests_seconds_max{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/notificacoes/{pedidoId}"} 0.0
# HELP jdbc_connections_active Current number of active connections that have been allocated from the data source.
# TYPE jdbc_connections_active gauge
jdbc_connections_active{name="dataSource"} 0.0
# HELP jdbc_connections_idle Number of established but idle connections.
# TYPE jdbc_connections_idle gauge
jdbc_connections_idle{name="dataSource"} 10.0
# HELP jdbc_connections_max Maximum number of active connections that can be allocated at the same time.
# TYPE jdbc_connections_max gauge
jdbc_connections_max{name="dataSource"} 10.0
# HELP jdbc_connections_min Minimum number of idle connections in the pool.
# TYPE jdbc_connections_min gauge
jdbc_connections_min{name="dataSource"} 10.0
# HELP jvm_info JVM version info
# TYPE jvm_info gauge
jvm_info{runtime="OpenJDK Runtime Environment",vendor="Eclipse Adoptium",version="17.0.16+8"} 1
# HELP jvm_buffer_count_buffers An estimate of the number of buffers in the pool
# TYPE jvm_buffer_count_buffers gauge
jvm_buffer_count_buffers{id="direct"} 22.0
jvm_buffer_count_buffers{id="mapped"} 0.0
jvm_buffer_count_buffers{id="mapped - 'non-volatile memory'"} 0.0
# HELP jvm_buffer_memory_used_bytes An estimate of the memory that the Java virtual machine is using for this buffer pool
# TYPE jvm_buffer_memory_used_bytes gauge
jvm_buffer_memory_used_bytes{id="direct"} 118616.0
jvm_buffer_memory_used_bytes{id="mapped"} 0.0
jvm_buffer_memory_used_bytes{id="mapped - 'non-volatile memory'"} 0.0
# HELP jvm_buffer_total_capacity_bytes An estimate of the total capacity of the buffers in this pool
# TYPE jvm_buffer_total_capacity_bytes gauge
jvm_buffer_total_capacity_bytes{id="direct"} 118615.0
jvm_buffer_total_capacity_bytes{id="mapped"} 0.0
jvm_buffer_total_capacity_bytes{id="mapped - 'non-volatile memory'"} 0.0
# HELP jvm_classes_loaded_classes The number of classes that are currently loaded in the Java virtual machine
# TYPE jvm_classes_loaded_classes gauge
jvm_classes_loaded_classes 20169.0
# HELP jvm_classes_unloaded_classes_total The number of classes unloaded in the Java virtual machine
# TYPE jvm_classes_unloaded_classes_total counter
jvm_classes_unloaded_classes_total 0.0
# HELP jvm_compilation_time_ms_total The approximate accumulated elapsed time spent in compilation
# TYPE jvm_compilation_time_ms_total counter
jvm_compilation_time_ms_total{compiler="HotSpot 64-Bit Tiered Compilers"} 590956.0
# HELP jvm_gc_live_data_size_bytes Size of long-lived heap memory pool after reclamation
# TYPE jvm_gc_live_data_size_bytes gauge
jvm_gc_live_data_size_bytes 0.0
# HELP jvm_gc_max_data_size_bytes Max size of long-lived heap memory pool
# TYPE jvm_gc_max_data_size_bytes gauge
jvm_gc_max_data_size_bytes 2.067791872E9
# HELP jvm_gc_memory_allocated_bytes_total Incremented for an increase in the size of the (young) heap memory pool after one GC to before the next
# TYPE jvm_gc_memory_allocated_bytes_total counter
jvm_gc_memory_allocated_bytes_total 6.647971832E9
# HELP jvm_gc_memory_promoted_bytes_total Count of positive increases in the size of the old generation memory pool before GC to after GC
# TYPE jvm_gc_memory_promoted_bytes_total counter
jvm_gc_memory_promoted_bytes_total 2.2520832E7
# HELP jvm_gc_overhead An approximation of the percent of CPU time used by GC activities over the last lookback period or since monitoring began, whichever is shorter, in the range [0..1]
# TYPE jvm_gc_overhead gauge
jvm_gc_overhead 2.0E-5
# HELP jvm_gc_pause_seconds Time spent in GC pause
# TYPE jvm_gc_pause_seconds summary
jvm_gc_pause_seconds_count{action="end of minor GC",cause="G1 Evacuation Pause",gc="G1 Young Generation"} 117
jvm_gc_pause_seconds_sum{action="end of minor GC",cause="G1 Evacuation Pause",gc="G1 Young Generation"} 102.371
# HELP jvm_gc_pause_seconds_max Time spent in GC pause
# TYPE jvm_gc_pause_seconds_max gauge
jvm_gc_pause_seconds_max{action="end of minor GC",cause="G1 Evacuation Pause",gc="G1 Young Generation"} 0.002
# HELP jvm_memory_committed_bytes The amount of memory in bytes that is committed for the Java virtual machine to use
# TYPE jvm_memory_committed_bytes gauge
jvm_memory_committed_bytes{area="heap",id="G1 Eden Space"} 5.6623104E7
jvm_memory_committed_bytes{area="heap",id="G1 Old Gen"} 1.047527424E9
jvm_memory_committed_bytes{area="heap",id="G1 Survivor Space"} 1048576.0
jvm_memory_committed_bytes{area="nonheap",id="CodeHeap 'non-nmethods'"} 2555904.0
jvm_memory_committed_bytes{area="nonheap",id="CodeHeap 'non-profiled nmethods'"} 1.4286848E7
jvm_memory_committed_bytes{area="nonheap",id="CodeHeap 'profiled nmethods'"} 2.260992E7
jvm_memory_committed_bytes{area="nonheap",id="Compressed Class Space"} 1.4221312E7
jvm_memory_committed_bytes{area="nonheap",id="Metaspace"} 1.08331008E8
# HELP jvm_memory_max_bytes The maximum amount of memory in bytes that can be used for memory management
# TYPE jvm_memory_max_bytes gauge
jvm_memory_max_bytes{area="heap",id="G1 Eden Space"} -1.0
jvm_memory_max_bytes{area="heap",id="G1 Old Gen"} 2.067791872E9
jvm_memory_max_bytes{area="heap",id="G1 Survivor Space"} -1.0
jvm_memory_max_bytes{area="nonheap",id="CodeHeap 'non-nmethods'"} 5836800.0
jvm_memory_max_bytes{area="nonheap",id="CodeHeap 'non-profiled nmethods'"} 1.22912768E8
jvm_memory_max_bytes{area="nonheap",id="CodeHeap 'profiled nmethods'"} 1.22908672E8
jvm_memory_max_bytes{area="nonheap",id="Compressed Class Space"} 1.073741824E9
jvm_memory_max_bytes{area="nonheap",id="Metaspace"} -1.0
# HELP jvm_memory_usage_after_gc The percentage of long-lived heap pool used after the last GC event, in the range [0..1]
# TYPE jvm_memory_usage_after_gc gauge
jvm_memory_usage_after_gc{area="heap",pool="long-lived"} 0.02564046058886917
# HELP jvm_memory_used_bytes The amount of used memory
# TYPE jvm_memory_used_bytes gauge
jvm_memory_used_bytes{area="heap",id="G1 Eden Space"} 9437184.0
jvm_memory_used_bytes{area="heap",id="G1 Old Gen"} 5.3019136E7
jvm_memory_used_bytes{area="heap",id="G1 Survivor Space"} 981952.0
jvm_memory_used_bytes{area="nonheap",id="CodeHeap 'non-nmethods'"} 1510784.0
jvm_memory_used_bytes{area="nonheap",id="CodeHeap 'non-profiled nmethods'"} 1.406912E7
jvm_memory_used_bytes{area="nonheap",id="CodeHeap 'profiled nmethods'"} 1.917376E7
jvm_memory_used_bytes{area="nonheap",id="Compressed Class Space"} 1.380208E7
jvm_memory_used_bytes{area="nonheap",id="Metaspace"} 1.0750364E8
# HELP jvm_threads_daemon_threads The current number of live daemon threads
# TYPE jvm_threads_daemon_threads gauge
jvm_threads_daemon_threads 25.0
# HELP jvm_threads_live_threads The current number of live threads including both daemon and non-daemon threads
# TYPE jvm_threads_live_threads gauge
jvm_threads_live_threads 44.0
# HELP jvm_threads_peak_threads The peak live thread count since the Java virtual machine started or peak was reset
# TYPE jvm_threads_peak_threads gauge
jvm_threads_peak_threads 81.0
# HELP jvm_threads_started_threads_total The total number of application threads started in the JVM
# TYPE jvm_threads_started_threads_total counter
jvm_threads_started_threads_total 265.0
# HELP jvm_threads_states_threads The current number of threads
# TYPE jvm_threads_states_threads gauge
jvm_threads_states_threads{state="blocked"} 0.0
jvm_threads_states_threads{state="new"} 0.0
jvm_threads_states_threads{state="runnable"} 10.0
jvm_threads_states_threads{state="terminated"} 0.0
jvm_threads_states_threads{state="timed-waiting"} 25.0
jvm_threads_states_threads{state="waiting"} 9.0
# HELP kafka_app_info_start_time_ms Metric indicating start-time-ms
# TYPE kafka_app_info_start_time_ms gauge
kafka_app_info_start_time_ms{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 1.759149826829E12
kafka_app_info_start_time_ms{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 1.759149826972E12
# HELP kafka_consumer_commit_sync_time_ns_total The total time the consumer has spent in commitSync in nanoseconds
# TYPE kafka_consumer_commit_sync_time_ns_total counter
kafka_consumer_commit_sync_time_ns_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_commit_sync_time_ns_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 4051412.0
# HELP kafka_consumer_committed_time_ns_total The total time the consumer has spent in committed in nanoseconds
# TYPE kafka_consumer_committed_time_ns_total counter
kafka_consumer_committed_time_ns_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_committed_time_ns_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
# HELP kafka_consumer_connection_close_total The total number of connections closed
# TYPE kafka_consumer_connection_close_total counter
kafka_consumer_connection_close_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 6.0
kafka_consumer_connection_close_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 6.0
# HELP kafka_consumer_connection_close_rate The number of connections closed per second
# TYPE kafka_consumer_connection_close_rate gauge
kafka_consumer_connection_close_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_connection_close_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
# HELP kafka_consumer_connection_count The current number of active connections.
# TYPE kafka_consumer_connection_count gauge
kafka_consumer_connection_count{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 2.0
kafka_consumer_connection_count{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 2.0
# HELP kafka_consumer_connection_creation_total The total number of new connections established
# TYPE kafka_consumer_connection_creation_total counter
kafka_consumer_connection_creation_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 8.0
kafka_consumer_connection_creation_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 8.0
# HELP kafka_consumer_connection_creation_rate The number of new connections established per second
# TYPE kafka_consumer_connection_creation_rate gauge
kafka_consumer_connection_creation_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_connection_creation_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
# HELP kafka_consumer_coordinator_assigned_partitions The number of partitions currently assigned to this consumer
# TYPE kafka_consumer_coordinator_assigned_partitions gauge
kafka_consumer_coordinator_assigned_partitions{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 1.0
kafka_consumer_coordinator_assigned_partitions{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 1.0
# HELP kafka_consumer_coordinator_commit_total The total number of commit calls
# TYPE kafka_consumer_coordinator_commit_total counter
kafka_consumer_coordinator_commit_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_coordinator_commit_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 1.0
# HELP kafka_consumer_coordinator_commit_latency_avg The average time taken for a commit request
# TYPE kafka_consumer_coordinator_commit_latency_avg gauge
kafka_consumer_coordinator_commit_latency_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_coordinator_commit_latency_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
# HELP kafka_consumer_coordinator_commit_latency_max The max time taken for a commit request
# TYPE kafka_consumer_coordinator_commit_latency_max gauge
kafka_consumer_coordinator_commit_latency_max{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_coordinator_commit_latency_max{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
# HELP kafka_consumer_coordinator_commit_rate The number of commit calls per second
# TYPE kafka_consumer_coordinator_commit_rate gauge
kafka_consumer_coordinator_commit_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_coordinator_commit_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
# HELP kafka_consumer_coordinator_failed_rebalance_total The total number of failed rebalance events
# TYPE kafka_consumer_coordinator_failed_rebalance_total counter
kafka_consumer_coordinator_failed_rebalance_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 2.0
kafka_consumer_coordinator_failed_rebalance_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 2.0
# HELP kafka_consumer_coordinator_failed_rebalance_rate_per_hour The number of failed rebalance events per hour
# TYPE kafka_consumer_coordinator_failed_rebalance_rate_per_hour gauge
kafka_consumer_coordinator_failed_rebalance_rate_per_hour{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_coordinator_failed_rebalance_rate_per_hour{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
# HELP kafka_consumer_coordinator_heartbeat_total The total number of heartbeats
# TYPE kafka_consumer_coordinator_heartbeat_total counter
kafka_consumer_coordinator_heartbeat_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 4347.0
kafka_consumer_coordinator_heartbeat_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 4344.0
# HELP kafka_consumer_coordinator_heartbeat_rate The number of heartbeats per second
# TYPE kafka_consumer_coordinator_heartbeat_rate gauge
kafka_consumer_coordinator_heartbeat_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.3362996688741722
kafka_consumer_coordinator_heartbeat_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.3458523338627863
# HELP kafka_consumer_coordinator_heartbeat_response_time_max The max time taken to receive a response to a heartbeat request
# TYPE kafka_consumer_coordinator_heartbeat_response_time_max gauge
kafka_consumer_coordinator_heartbeat_response_time_max{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 2.0
kafka_consumer_coordinator_heartbeat_response_time_max{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 2.0
# HELP kafka_consumer_coordinator_join_total The total number of group joins
# TYPE kafka_consumer_coordinator_join_total counter
kafka_consumer_coordinator_join_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 3.0
kafka_consumer_coordinator_join_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 2.0
# HELP kafka_consumer_coordinator_join_rate The number of group joins per second
# TYPE kafka_consumer_coordinator_join_rate gauge
kafka_consumer_coordinator_join_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_coordinator_join_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
# HELP kafka_consumer_coordinator_join_time_avg The average time taken for a group rejoin
# TYPE kafka_consumer_coordinator_join_time_avg gauge
kafka_consumer_coordinator_join_time_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_coordinator_join_time_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
# HELP kafka_consumer_coordinator_join_time_max The max time taken for a group rejoin
# TYPE kafka_consumer_coordinator_join_time_max gauge
kafka_consumer_coordinator_join_time_max{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_coordinator_join_time_max{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
# HELP kafka_consumer_coordinator_last_heartbeat_seconds_ago The number of seconds since the last coordinator heartbeat was sent
# TYPE kafka_consumer_coordinator_last_heartbeat_seconds_ago gauge
kafka_consumer_coordinator_last_heartbeat_seconds_ago{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 2.0
kafka_consumer_coordinator_last_heartbeat_seconds_ago{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
# HELP kafka_consumer_coordinator_last_rebalance_seconds_ago The number of seconds since the last successful rebalance event
# TYPE kafka_consumer_coordinator_last_rebalance_seconds_ago gauge
kafka_consumer_coordinator_last_rebalance_seconds_ago{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 951.0
kafka_consumer_coordinator_last_rebalance_seconds_ago{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 951.0
# HELP kafka_consumer_coordinator_partition_assigned_latency_avg The average time taken for a partition-assigned rebalance listener callback
# TYPE kafka_consumer_coordinator_partition_assigned_latency_avg gauge
kafka_consumer_coordinator_partition_assigned_latency_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_coordinator_partition_assigned_latency_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
# HELP kafka_consumer_coordinator_partition_assigned_latency_max The max time taken for a partition-assigned rebalance listener callback
# TYPE kafka_consumer_coordinator_partition_assigned_latency_max gauge
kafka_consumer_coordinator_partition_assigned_latency_max{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_coordinator_partition_assigned_latency_max{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
# HELP kafka_consumer_coordinator_partition_lost_latency_avg The average time taken for a partition-lost rebalance listener callback
# TYPE kafka_consumer_coordinator_partition_lost_latency_avg gauge
kafka_consumer_coordinator_partition_lost_latency_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_coordinator_partition_lost_latency_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
# HELP kafka_consumer_coordinator_partition_lost_latency_max The max time taken for a partition-lost rebalance listener callback
# TYPE kafka_consumer_coordinator_partition_lost_latency_max gauge
kafka_consumer_coordinator_partition_lost_latency_max{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_coordinator_partition_lost_latency_max{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
# HELP kafka_consumer_coordinator_partition_revoked_latency_avg The average time taken for a partition-revoked rebalance listener callback
# TYPE kafka_consumer_coordinator_partition_revoked_latency_avg gauge
kafka_consumer_coordinator_partition_revoked_latency_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_coordinator_partition_revoked_latency_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
# HELP kafka_consumer_coordinator_partition_revoked_latency_max The max time taken for a partition-revoked rebalance listener callback
# TYPE kafka_consumer_coordinator_partition_revoked_latency_max gauge
kafka_consumer_coordinator_partition_revoked_latency_max{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_coordinator_partition_revoked_latency_max{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
# HELP kafka_consumer_coordinator_rebalance_total The total number of successful rebalance events, each event is composed of several failed re-trials until it succeeded
# TYPE kafka_consumer_coordinator_rebalance_total counter
kafka_consumer_coordinator_rebalance_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 2.0
kafka_consumer_coordinator_rebalance_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 2.0
# HELP kafka_consumer_coordinator_rebalance_latency_total The total number of milliseconds this consumer has spent in successful rebalances since creation
# TYPE kafka_consumer_coordinator_rebalance_latency_total counter
kafka_consumer_coordinator_rebalance_latency_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 39741.0
kafka_consumer_coordinator_rebalance_latency_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 39511.0
# HELP kafka_consumer_coordinator_rebalance_latency_avg The average time taken for a group to complete a successful rebalance, which may be composed of several failed re-trials until it succeeded
# TYPE kafka_consumer_coordinator_rebalance_latency_avg gauge
kafka_consumer_coordinator_rebalance_latency_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_coordinator_rebalance_latency_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
# HELP kafka_consumer_coordinator_rebalance_latency_max The max time taken for a group to complete a successful rebalance, which may be composed of several failed re-trials until it succeeded
# TYPE kafka_consumer_coordinator_rebalance_latency_max gauge
kafka_consumer_coordinator_rebalance_latency_max{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_coordinator_rebalance_latency_max{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
# HELP kafka_consumer_coordinator_rebalance_rate_per_hour The number of successful rebalance events per hour, each event is composed of several failed re-trials until it succeeded
# TYPE kafka_consumer_coordinator_rebalance_rate_per_hour gauge
kafka_consumer_coordinator_rebalance_rate_per_hour{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_coordinator_rebalance_rate_per_hour{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
# HELP kafka_consumer_coordinator_sync_total The total number of group syncs
# TYPE kafka_consumer_coordinator_sync_total counter
kafka_consumer_coordinator_sync_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 2.0
kafka_consumer_coordinator_sync_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 2.0
# HELP kafka_consumer_coordinator_sync_rate The number of group syncs per second
# TYPE kafka_consumer_coordinator_sync_rate gauge
kafka_consumer_coordinator_sync_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_coordinator_sync_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
# HELP kafka_consumer_coordinator_sync_time_avg The average time taken for a group sync
# TYPE kafka_consumer_coordinator_sync_time_avg gauge
kafka_consumer_coordinator_sync_time_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_coordinator_sync_time_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
# HELP kafka_consumer_coordinator_sync_time_max The max time taken for a group sync
# TYPE kafka_consumer_coordinator_sync_time_max gauge
kafka_consumer_coordinator_sync_time_max{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_coordinator_sync_time_max{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
# HELP kafka_consumer_failed_authentication_total The total number of connections with failed authentication
# TYPE kafka_consumer_failed_authentication_total counter
kafka_consumer_failed_authentication_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_failed_authentication_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
# HELP kafka_consumer_failed_authentication_rate The number of connections with failed authentication per second
# TYPE kafka_consumer_failed_authentication_rate gauge
kafka_consumer_failed_authentication_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_failed_authentication_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
# HELP kafka_consumer_failed_reauthentication_total The total number of failed re-authentication of connections
# TYPE kafka_consumer_failed_reauthentication_total counter
kafka_consumer_failed_reauthentication_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_failed_reauthentication_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
# HELP kafka_consumer_failed_reauthentication_rate The number of failed re-authentication of connections per second
# TYPE kafka_consumer_failed_reauthentication_rate gauge
kafka_consumer_failed_reauthentication_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_failed_reauthentication_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
# HELP kafka_consumer_fetch_manager_bytes_consumed_total The total number of bytes consumed for a topic
# TYPE kafka_consumer_fetch_manager_bytes_consumed_total counter
kafka_consumer_fetch_manager_bytes_consumed_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1",topic="pagamento_processado"} 0.0
kafka_consumer_fetch_manager_bytes_consumed_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2",topic="pedido_criado"} 120.0
# HELP kafka_consumer_fetch_manager_bytes_consumed_rate The average number of bytes consumed per second for a topic
# TYPE kafka_consumer_fetch_manager_bytes_consumed_rate gauge
kafka_consumer_fetch_manager_bytes_consumed_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1",topic="pagamento_processado"} 0.0
kafka_consumer_fetch_manager_bytes_consumed_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2",topic="pedido_criado"} 0.0
# HELP kafka_consumer_fetch_manager_fetch_total The total number of fetch requests.
# TYPE kafka_consumer_fetch_manager_fetch_total counter
kafka_consumer_fetch_manager_fetch_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 25577.0
kafka_consumer_fetch_manager_fetch_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 25597.0
# HELP kafka_consumer_fetch_manager_fetch_latency_avg The average time taken for a fetch request.
# TYPE kafka_consumer_fetch_manager_fetch_latency_avg gauge
kafka_consumer_fetch_manager_fetch_latency_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 501.10714285714283
kafka_consumer_fetch_manager_fetch_latency_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 501.1020408163265
# HELP kafka_consumer_fetch_manager_fetch_latency_max The max time taken for any fetch request.
# TYPE kafka_consumer_fetch_manager_fetch_latency_max gauge
kafka_consumer_fetch_manager_fetch_latency_max{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 503.0
kafka_consumer_fetch_manager_fetch_latency_max{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 503.0
# HELP kafka_consumer_fetch_manager_fetch_rate The number of fetch requests per second.
# TYPE kafka_consumer_fetch_manager_fetch_rate gauge
kafka_consumer_fetch_manager_fetch_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 2.0013437593812986
kafka_consumer_fetch_manager_fetch_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 2.000816659861168
# HELP kafka_consumer_fetch_manager_fetch_size_avg The average number of bytes fetched per request for a topic
# TYPE kafka_consumer_fetch_manager_fetch_size_avg gauge
kafka_consumer_fetch_manager_fetch_size_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1",topic="pagamento_processado"} NaN
kafka_consumer_fetch_manager_fetch_size_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2",topic="pedido_criado"} NaN
# HELP kafka_consumer_fetch_manager_fetch_size_max The maximum number of bytes fetched per request for a topic
# TYPE kafka_consumer_fetch_manager_fetch_size_max gauge
kafka_consumer_fetch_manager_fetch_size_max{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1",topic="pagamento_processado"} NaN
kafka_consumer_fetch_manager_fetch_size_max{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2",topic="pedido_criado"} NaN
# HELP kafka_consumer_fetch_manager_fetch_throttle_time_avg The average throttle time in ms
# TYPE kafka_consumer_fetch_manager_fetch_throttle_time_avg gauge
kafka_consumer_fetch_manager_fetch_throttle_time_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_fetch_manager_fetch_throttle_time_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
# HELP kafka_consumer_fetch_manager_fetch_throttle_time_max The maximum throttle time in ms
# TYPE kafka_consumer_fetch_manager_fetch_throttle_time_max gauge
kafka_consumer_fetch_manager_fetch_throttle_time_max{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_fetch_manager_fetch_throttle_time_max{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
# HELP kafka_consumer_fetch_manager_preferred_read_replica The current read replica for the partition, or -1 if reading from leader
# TYPE kafka_consumer_fetch_manager_preferred_read_replica gauge
kafka_consumer_fetch_manager_preferred_read_replica{client_id="consumer-notification-service-1",kafka_version="3.9.1",partition="0",spring_id="kafkaConsumerFactory.consumer-notification-service-1",topic="pagamento_processado"} -1.0
kafka_consumer_fetch_manager_preferred_read_replica{client_id="consumer-notification-service-2",kafka_version="3.9.1",partition="0",spring_id="kafkaConsumerFactory.consumer-notification-service-2",topic="pedido_criado"} -1.0
# HELP kafka_consumer_fetch_manager_records_consumed_total The total number of records consumed for a topic
# TYPE kafka_consumer_fetch_manager_records_consumed_total counter
kafka_consumer_fetch_manager_records_consumed_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1",topic="pagamento_processado"} 0.0
kafka_consumer_fetch_manager_records_consumed_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2",topic="pedido_criado"} 1.0
# HELP kafka_consumer_fetch_manager_records_consumed_rate The average number of records consumed per second for a topic
# TYPE kafka_consumer_fetch_manager_records_consumed_rate gauge
kafka_consumer_fetch_manager_records_consumed_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1",topic="pagamento_processado"} 0.0
kafka_consumer_fetch_manager_records_consumed_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2",topic="pedido_criado"} 0.0
# HELP kafka_consumer_fetch_manager_records_lag_max The maximum lag in terms of number of records for any partition in this window. NOTE: This is based on current offset and not committed offset
# TYPE kafka_consumer_fetch_manager_records_lag_max gauge
kafka_consumer_fetch_manager_records_lag_max{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
# HELP kafka_consumer_fetch_manager_records_lead_min The minimum lead in terms of number of records for any partition in this window
# TYPE kafka_consumer_fetch_manager_records_lead_min gauge
kafka_consumer_fetch_manager_records_lead_min{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
# HELP kafka_consumer_fetch_manager_records_per_request_avg The average number of records in each request for a topic
# TYPE kafka_consumer_fetch_manager_records_per_request_avg gauge
kafka_consumer_fetch_manager_records_per_request_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1",topic="pagamento_processado"} NaN
kafka_consumer_fetch_manager_records_per_request_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2",topic="pedido_criado"} NaN
# HELP kafka_consumer_incoming_byte_total The total number of bytes read off all sockets
# TYPE kafka_consumer_incoming_byte_total counter
kafka_consumer_incoming_byte_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 624573.0
kafka_consumer_incoming_byte_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 620618.0
# HELP kafka_consumer_incoming_byte_rate The number of bytes read off all sockets per second
# TYPE kafka_consumer_incoming_byte_rate gauge
kafka_consumer_incoming_byte_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 50.32900016048788
kafka_consumer_incoming_byte_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 47.54928076718167
# HELP kafka_consumer_io_ratio The fraction of time the I/O thread spent doing I/O
# TYPE kafka_consumer_io_ratio gauge
kafka_consumer_io_ratio{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 4.109842945886444E-4
kafka_consumer_io_ratio{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 3.9214481954793324E-4
# HELP kafka_consumer_io_time_ns_total The total time the I/O thread spent doing I/O
# TYPE kafka_consumer_io_time_ns_total counter
kafka_consumer_io_time_ns_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 9.360670302E9
kafka_consumer_io_time_ns_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 1.1448812134E10
# HELP kafka_consumer_io_time_ns_avg The average length of time for I/O per select call in nanoseconds.
# TYPE kafka_consumer_io_time_ns_avg gauge
kafka_consumer_io_time_ns_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 49010.90802675585
kafka_consumer_io_time_ns_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 48810.854922279796
# HELP kafka_consumer_io_wait_ratio The fraction of time the I/O thread spent waiting
# TYPE kafka_consumer_io_wait_ratio gauge
kafka_consumer_io_wait_ratio{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.9972654979666816
kafka_consumer_io_wait_ratio{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 1.0035136874479658
# HELP kafka_consumer_io_wait_time_ns_total The total time the I/O thread spent waiting
# TYPE kafka_consumer_io_wait_time_ns_total counter
kafka_consumer_io_wait_time_ns_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 1.308009117837E13
kafka_consumer_io_wait_time_ns_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 1.307469519308E13
# HELP kafka_consumer_io_wait_time_ns_avg The average length of time the I/O thread spent waiting for a socket ready for reads or writes in nanoseconds.
# TYPE kafka_consumer_io_wait_time_ns_avg gauge
kafka_consumer_io_wait_time_ns_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 1.1892474446655518E8
kafka_consumer_io_wait_time_ns_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 1.249071233626943E8
# HELP kafka_consumer_io_waittime_total *Deprecated* The total time the I/O thread spent waiting
# TYPE kafka_consumer_io_waittime_total counter
kafka_consumer_io_waittime_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 1.308009117837E13
kafka_consumer_io_waittime_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 1.307469519308E13
# HELP kafka_consumer_iotime_total *Deprecated* The total time the I/O thread spent doing I/O
# TYPE kafka_consumer_iotime_total counter
kafka_consumer_iotime_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 9.360670302E9
kafka_consumer_iotime_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 1.1448812134E10
# HELP kafka_consumer_last_poll_seconds_ago The number of seconds since the last poll() invocation.
# TYPE kafka_consumer_last_poll_seconds_ago gauge
kafka_consumer_last_poll_seconds_ago{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 4.0
kafka_consumer_last_poll_seconds_ago{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 1.0
# HELP kafka_consumer_network_io_total The total number of network operations (reads or writes) on all connections
# TYPE kafka_consumer_network_io_total counter
kafka_consumer_network_io_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 60092.0
kafka_consumer_network_io_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 60116.0
# HELP kafka_consumer_network_io_rate The number of network operations (reads or writes) on all connections per second
# TYPE kafka_consumer_network_io_rate gauge
kafka_consumer_network_io_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 4.681142198696482
kafka_consumer_network_io_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 4.687365084064192
# HELP kafka_consumer_node_incoming_byte_total The total number of incoming bytes
# TYPE kafka_consumer_node_incoming_byte_total counter
kafka_consumer_node_incoming_byte_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 1100.0
kafka_consumer_node_incoming_byte_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 551018.0
kafka_consumer_node_incoming_byte_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 72455.0
kafka_consumer_node_incoming_byte_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 1119.0
kafka_consumer_node_incoming_byte_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 547738.0
kafka_consumer_node_incoming_byte_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 71761.0
# HELP kafka_consumer_node_incoming_byte_rate The number of incoming bytes per second
# TYPE kafka_consumer_node_incoming_byte_rate gauge
kafka_consumer_node_incoming_byte_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_node_incoming_byte_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 44.22989031078611
kafka_consumer_node_incoming_byte_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 5.39230633435509
kafka_consumer_node_incoming_byte_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
kafka_consumer_node_incoming_byte_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 42.016577969539
kafka_consumer_node_incoming_byte_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 5.593939898443353
# HELP kafka_consumer_node_outgoing_byte_total The total number of outgoing bytes
# TYPE kafka_consumer_node_outgoing_byte_total counter
kafka_consumer_node_outgoing_byte_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 442.0
kafka_consumer_node_outgoing_byte_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 1825691.0
kafka_consumer_node_outgoing_byte_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 621632.0
kafka_consumer_node_outgoing_byte_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 435.0
kafka_consumer_node_outgoing_byte_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 1824754.0
kafka_consumer_node_outgoing_byte_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 620487.0
# HELP kafka_consumer_node_outgoing_byte_rate The number of outgoing bytes per second
# TYPE kafka_consumer_node_outgoing_byte_rate gauge
kafka_consumer_node_outgoing_byte_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_node_outgoing_byte_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 143.3288771581028
kafka_consumer_node_outgoing_byte_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 47.789993269015035
kafka_consumer_node_outgoing_byte_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
kafka_consumer_node_outgoing_byte_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 142.0518297216552
kafka_consumer_node_outgoing_byte_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 49.25903313537215
# HELP kafka_consumer_node_request_total The total number of requests sent
# TYPE kafka_consumer_node_request_total counter
kafka_consumer_node_request_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 6.0
kafka_consumer_node_request_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 25676.0
kafka_consumer_node_request_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 4372.0
kafka_consumer_node_request_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 6.0
kafka_consumer_node_request_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 25690.0
kafka_consumer_node_request_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 4368.0
# TYPE kafka_consumer_node_request_latency_avg gauge
kafka_consumer_node_request_latency_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_node_request_latency_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_node_request_latency_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_node_request_latency_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
kafka_consumer_node_request_latency_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
kafka_consumer_node_request_latency_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
# TYPE kafka_consumer_node_request_latency_max gauge
kafka_consumer_node_request_latency_max{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_node_request_latency_max{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_node_request_latency_max{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_node_request_latency_max{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
kafka_consumer_node_request_latency_max{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
kafka_consumer_node_request_latency_max{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
# HELP kafka_consumer_node_request_rate The number of requests sent per second
# TYPE kafka_consumer_node_request_rate gauge
kafka_consumer_node_request_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_node_request_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 2.0109918989019526
kafka_consumer_node_request_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.3365492483733453
kafka_consumer_node_request_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
kafka_consumer_node_request_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 2.0007299960796505
kafka_consumer_node_request_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.3468945995448743
# HELP kafka_consumer_node_request_size_avg The average size of requests sent.
# TYPE kafka_consumer_node_request_size_avg gauge
kafka_consumer_node_request_size_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_node_request_size_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 71.27272727272727
kafka_consumer_node_request_size_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 142.0
kafka_consumer_node_request_size_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
kafka_consumer_node_request_size_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 71.0
kafka_consumer_node_request_size_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 142.0
# HELP kafka_consumer_node_request_size_max The maximum size of any request sent.
# TYPE kafka_consumer_node_request_size_max gauge
kafka_consumer_node_request_size_max{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_node_request_size_max{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 119.0
kafka_consumer_node_request_size_max{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 142.0
kafka_consumer_node_request_size_max{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
kafka_consumer_node_request_size_max{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 71.0
kafka_consumer_node_request_size_max{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 142.0
# HELP kafka_consumer_node_response_total The total number of responses received
# TYPE kafka_consumer_node_response_total counter
kafka_consumer_node_response_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 6.0
kafka_consumer_node_response_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 25671.0
kafka_consumer_node_response_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 4361.0
kafka_consumer_node_response_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 6.0
kafka_consumer_node_response_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 25687.0
kafka_consumer_node_response_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 4358.0
# HELP kafka_consumer_node_response_rate The number of responses received per second
# TYPE kafka_consumer_node_response_rate gauge
kafka_consumer_node_response_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_node_response_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 2.010968921389397
kafka_consumer_node_response_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.3370191458971931
kafka_consumer_node_response_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
kafka_consumer_node_response_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 2.0007894271209046
kafka_consumer_node_response_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.3496212436527096
# HELP kafka_consumer_outgoing_byte_total The total number of outgoing bytes sent to all servers
# TYPE kafka_consumer_outgoing_byte_total counter
kafka_consumer_outgoing_byte_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 2447765.0
kafka_consumer_outgoing_byte_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 2445676.0
# HELP kafka_consumer_outgoing_byte_rate The number of outgoing bytes sent to all servers per second
# TYPE kafka_consumer_outgoing_byte_rate gauge
kafka_consumer_outgoing_byte_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 190.61851091666367
kafka_consumer_outgoing_byte_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 190.92378097669885
# HELP kafka_consumer_poll_idle_ratio_avg The average fraction of time the consumer's poll() is idle as opposed to waiting for the user code to process records.
# TYPE kafka_consumer_poll_idle_ratio_avg gauge
kafka_consumer_poll_idle_ratio_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.4999964289285357
kafka_consumer_poll_idle_ratio_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.4999958337499583
# HELP kafka_consumer_reauthentication_latency_avg The average latency observed due to re-authentication
# TYPE kafka_consumer_reauthentication_latency_avg gauge
kafka_consumer_reauthentication_latency_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_reauthentication_latency_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
# HELP kafka_consumer_reauthentication_latency_max The max latency observed due to re-authentication
# TYPE kafka_consumer_reauthentication_latency_max gauge
kafka_consumer_reauthentication_latency_max{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} NaN
kafka_consumer_reauthentication_latency_max{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} NaN
# HELP kafka_consumer_request_total The total number of requests sent
# TYPE kafka_consumer_request_total counter
kafka_consumer_request_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 30054.0
kafka_consumer_request_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 30064.0
# HELP kafka_consumer_request_rate The number of requests sent per second
# TYPE kafka_consumer_request_rate gauge
kafka_consumer_request_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 2.340571099348241
kafka_consumer_request_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 2.343682542032096
# HELP kafka_consumer_request_size_avg The average size of requests sent.
# TYPE kafka_consumer_request_size_avg gauge
kafka_consumer_request_size_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 81.44102564102565
kafka_consumer_request_size_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 81.46315789473684
# HELP kafka_consumer_request_size_max The maximum size of any request sent.
# TYPE kafka_consumer_request_size_max gauge
kafka_consumer_request_size_max{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 142.0
kafka_consumer_request_size_max{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 142.0
# HELP kafka_consumer_response_total The total number of responses received
# TYPE kafka_consumer_response_total counter
kafka_consumer_response_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 30038.0
kafka_consumer_response_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 30051.0
# HELP kafka_consumer_response_rate The number of responses received per second
# TYPE kafka_consumer_response_rate gauge
kafka_consumer_response_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 2.3431230942063874
kafka_consumer_response_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 2.3474960042621205
# HELP kafka_consumer_select_total The total number of times the I/O layer checked for new I/O to perform
# TYPE kafka_consumer_select_total counter
kafka_consumer_select_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 133214.0
kafka_consumer_select_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 123178.0
# HELP kafka_consumer_select_rate The number of times the I/O layer checked for new I/O to perform per second
# TYPE kafka_consumer_select_rate gauge
kafka_consumer_select_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 8.385685438635853
kafka_consumer_select_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 8.034078925459289
# HELP kafka_consumer_successful_authentication_total The total number of connections with successful authentication
# TYPE kafka_consumer_successful_authentication_total counter
kafka_consumer_successful_authentication_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_successful_authentication_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
# HELP kafka_consumer_successful_authentication_no_reauth_total The total number of connections with successful authentication where the client does not support re-authentication
# TYPE kafka_consumer_successful_authentication_no_reauth_total counter
kafka_consumer_successful_authentication_no_reauth_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_successful_authentication_no_reauth_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
# HELP kafka_consumer_successful_authentication_rate The number of connections with successful authentication per second
# TYPE kafka_consumer_successful_authentication_rate gauge
kafka_consumer_successful_authentication_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_successful_authentication_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
# HELP kafka_consumer_successful_reauthentication_total The total number of successful re-authentication of connections
# TYPE kafka_consumer_successful_reauthentication_total counter
kafka_consumer_successful_reauthentication_total{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_successful_reauthentication_total{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
# HELP kafka_consumer_successful_reauthentication_rate The number of successful re-authentication of connections per second
# TYPE kafka_consumer_successful_reauthentication_rate gauge
kafka_consumer_successful_reauthentication_rate{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 0.0
kafka_consumer_successful_reauthentication_rate{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 0.0
# HELP kafka_consumer_time_between_poll_avg The average delay between invocations of poll() in milliseconds.
# TYPE kafka_consumer_time_between_poll_avg gauge
kafka_consumer_time_between_poll_avg{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 5000.692307692308
kafka_consumer_time_between_poll_avg{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 5000.416666666667
# HELP kafka_consumer_time_between_poll_max The max delay between invocations of poll() in milliseconds.
# TYPE kafka_consumer_time_between_poll_max gauge
kafka_consumer_time_between_poll_max{client_id="consumer-notification-service-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-1"} 5001.0
kafka_consumer_time_between_poll_max{client_id="consumer-notification-service-2",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-notification-service-2"} 5001.0
# HELP logback_events_total Number of log events that were enabled by the effective log level
# TYPE logback_events_total counter
logback_events_total{level="debug"} 0.0
logback_events_total{level="error"} 2.0
logback_events_total{level="info"} 135.0
logback_events_total{level="trace"} 0.0
logback_events_total{level="warn"} 6861.0
# HELP process_cpu_time_ns_total The "cpu time" used by the Java Virtual Machine process
# TYPE process_cpu_time_ns_total counter
process_cpu_time_ns_total 5.2569E11
# HELP process_cpu_usage The "recent cpu usage" for the Java Virtual Machine process
# TYPE process_cpu_usage gauge
process_cpu_usage 0.002136752136752137
# HELP process_files_max_files The maximum file descriptor count
# TYPE process_files_max_files gauge
process_files_max_files 1048576.0
# HELP process_files_open_files The open file descriptor count
# TYPE process_files_open_files gauge
process_files_open_files 49.0
# HELP process_start_time_seconds Start time of the process since unix epoch.
# TYPE process_start_time_seconds gauge
process_start_time_seconds 1.759149774321E9
# HELP process_uptime_seconds The uptime of the Java virtual machine
# TYPE process_uptime_seconds gauge
process_uptime_seconds 13573.536
# HELP rabbitmq_acknowledged_total  
# TYPE rabbitmq_acknowledged_total counter
rabbitmq_acknowledged_total{name="rabbit"} 0.0
# HELP rabbitmq_acknowledged_published_total  
# TYPE rabbitmq_acknowledged_published_total counter
rabbitmq_acknowledged_published_total{name="rabbit"} 0.0
# HELP rabbitmq_channels  
# TYPE rabbitmq_channels gauge
rabbitmq_channels{name="rabbit"} 2.0
# HELP rabbitmq_connections  
# TYPE rabbitmq_connections gauge
rabbitmq_connections{name="rabbit"} 1.0
# HELP rabbitmq_consumed_total  
# TYPE rabbitmq_consumed_total counter
rabbitmq_consumed_total{name="rabbit"} 1.0
# HELP rabbitmq_failed_to_publish_total  
# TYPE rabbitmq_failed_to_publish_total counter
rabbitmq_failed_to_publish_total{name="rabbit"} 0.0
# HELP rabbitmq_not_acknowledged_published_total  
# TYPE rabbitmq_not_acknowledged_published_total counter
rabbitmq_not_acknowledged_published_total{name="rabbit"} 0.0
# HELP rabbitmq_published_total  
# TYPE rabbitmq_published_total counter
rabbitmq_published_total{name="rabbit"} 0.0
# HELP rabbitmq_rejected_total  
# TYPE rabbitmq_rejected_total counter
rabbitmq_rejected_total{name="rabbit"} 1.0
# HELP rabbitmq_requeued_total  
# TYPE rabbitmq_requeued_total counter
rabbitmq_requeued_total{name="rabbit"} 0.0
# HELP rabbitmq_unrouted_published_total  
# TYPE rabbitmq_unrouted_published_total counter
rabbitmq_unrouted_published_total{name="rabbit"} 0.0
# HELP spring_data_repository_invocations_seconds Duration of repository invocations
# TYPE spring_data_repository_invocations_seconds summary
spring_data_repository_invocations_seconds_count{exception="None",method="findAll",repository="NotificationRepository",state="SUCCESS"} 424
spring_data_repository_invocations_seconds_sum{exception="None",method="findAll",repository="NotificationRepository",state="SUCCESS"} 863.334772542
spring_data_repository_invocations_seconds_count{exception="None",method="findByPedidoId",repository="NotificationRepository",state="SUCCESS"} 200
spring_data_repository_invocations_seconds_sum{exception="None",method="findByPedidoId",repository="NotificationRepository",state="SUCCESS"} 0.474067929
# HELP spring_data_repository_invocations_seconds_max Duration of repository invocations
# TYPE spring_data_repository_invocations_seconds_max gauge
spring_data_repository_invocations_seconds_max{exception="None",method="findAll",repository="NotificationRepository",state="SUCCESS"} 0.0
spring_data_repository_invocations_seconds_max{exception="None",method="findByPedidoId",repository="NotificationRepository",state="SUCCESS"} 0.0
# HELP spring_kafka_listener_seconds Kafka Listener Timer
# TYPE spring_kafka_listener_seconds summary
spring_kafka_listener_seconds_count{exception="DeserializationException",name="org.springframework.kafka.KafkaListenerEndpointContainer#1-0",result="failure"} 1
spring_kafka_listener_seconds_sum{exception="DeserializationException",name="org.springframework.kafka.KafkaListenerEndpointContainer#1-0",result="failure"} 0.013953239
spring_kafka_listener_seconds_count{exception="none",name="org.springframework.kafka.KafkaListenerEndpointContainer#0-0",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="org.springframework.kafka.KafkaListenerEndpointContainer#0-0",result="success"} 0.0
spring_kafka_listener_seconds_count{exception="none",name="org.springframework.kafka.KafkaListenerEndpointContainer#1-0",result="success"} 0
spring_kafka_listener_seconds_sum{exception="none",name="org.springframework.kafka.KafkaListenerEndpointContainer#1-0",result="success"} 0.0
# HELP spring_kafka_listener_seconds_max Kafka Listener Timer
# TYPE spring_kafka_listener_seconds_max gauge
spring_kafka_listener_seconds_max{exception="DeserializationException",name="org.springframework.kafka.KafkaListenerEndpointContainer#1-0",result="failure"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="org.springframework.kafka.KafkaListenerEndpointContainer#0-0",result="success"} 0.0
spring_kafka_listener_seconds_max{exception="none",name="org.springframework.kafka.KafkaListenerEndpointContainer#1-0",result="success"} 0.0
# HELP spring_kafka_template_seconds KafkaTemplate Timer
# TYPE spring_kafka_template_seconds summary
spring_kafka_template_seconds_count{exception="none",name="kafkaTemplate",result="success"} 0
spring_kafka_template_seconds_sum{exception="none",name="kafkaTemplate",result="success"} 0.0
# HELP spring_kafka_template_seconds_max KafkaTemplate Timer
# TYPE spring_kafka_template_seconds_max gauge
spring_kafka_template_seconds_max{exception="none",name="kafkaTemplate",result="success"} 0.0
# HELP spring_rabbitmq_listener_seconds Spring RabbitMQ Listener
# TYPE spring_rabbitmq_listener_seconds summary
spring_rabbitmq_listener_seconds_count{exception="ListenerExecutionFailedException",listener_id="org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1",queue="pedido.criado",result="failure"} 1
spring_rabbitmq_listener_seconds_sum{exception="ListenerExecutionFailedException",listener_id="org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1",queue="pedido.criado",result="failure"} 0.008430923
# HELP spring_rabbitmq_listener_seconds_max Spring RabbitMQ Listener
# TYPE spring_rabbitmq_listener_seconds_max gauge
spring_rabbitmq_listener_seconds_max{exception="ListenerExecutionFailedException",listener_id="org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1",queue="pedido.criado",result="failure"} 0.0
# HELP spring_security_authorizations_active_seconds  
# TYPE spring_security_authorizations_active_seconds summary
spring_security_authorizations_active_seconds_count{spring_security_authentication_type="n/a",spring_security_authorization_decision="unknown",spring_security_object="request"} 0
spring_security_authorizations_active_seconds_sum{spring_security_authentication_type="n/a",spring_security_authorization_decision="unknown",spring_security_object="request"} 0.0
# HELP spring_security_authorizations_active_seconds_max  
# TYPE spring_security_authorizations_active_seconds_max gauge
spring_security_authorizations_active_seconds_max{spring_security_authentication_type="n/a",spring_security_authorization_decision="unknown",spring_security_object="request"} 0.0
# HELP spring_security_authorizations_seconds  
# TYPE spring_security_authorizations_seconds summary
spring_security_authorizations_seconds_count{error="none",spring_security_authentication_type="n/a",spring_security_authorization_decision="true",spring_security_object="request"} 17026
spring_security_authorizations_seconds_sum{error="none",spring_security_authentication_type="n/a",spring_security_authorization_decision="true",spring_security_object="request"} 6.947571486
# HELP spring_security_authorizations_seconds_max  
# TYPE spring_security_authorizations_seconds_max gauge
spring_security_authorizations_seconds_max{error="none",spring_security_authentication_type="n/a",spring_security_authorization_decision="true",spring_security_object="request"} 5.4603E-5
# HELP spring_security_filterchains_access_exceptions_after_total  
# TYPE spring_security_filterchains_access_exceptions_after_total counter
spring_security_filterchains_access_exceptions_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 17025.0
# HELP spring_security_filterchains_access_exceptions_before_total  
# TYPE spring_security_filterchains_access_exceptions_before_total counter
spring_security_filterchains_access_exceptions_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 17026.0
# HELP spring_security_filterchains_active_seconds  
# TYPE spring_security_filterchains_active_seconds summary
spring_security_filterchains_active_seconds_count{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 0
spring_security_filterchains_active_seconds_sum{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 0.0
spring_security_filterchains_active_seconds_count{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 0
spring_security_filterchains_active_seconds_sum{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 0.0
# HELP spring_security_filterchains_active_seconds_max  
# TYPE spring_security_filterchains_active_seconds_max gauge
spring_security_filterchains_active_seconds_max{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 0.0
spring_security_filterchains_active_seconds_max{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 0.0
# HELP spring_security_filterchains_authentication_anonymous_after_total  
# TYPE spring_security_filterchains_authentication_anonymous_after_total counter
spring_security_filterchains_authentication_anonymous_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 17025.0
# HELP spring_security_filterchains_authentication_anonymous_before_total  
# TYPE spring_security_filterchains_authentication_anonymous_before_total counter
spring_security_filterchains_authentication_anonymous_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 17026.0
# HELP spring_security_filterchains_authorization_after_total  
# TYPE spring_security_filterchains_authorization_after_total counter
spring_security_filterchains_authorization_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 17025.0
# HELP spring_security_filterchains_authorization_before_total  
# TYPE spring_security_filterchains_authorization_before_total counter
spring_security_filterchains_authorization_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 17026.0
# HELP spring_security_filterchains_context_async_after_total  
# TYPE spring_security_filterchains_context_async_after_total counter
spring_security_filterchains_context_async_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 17025.0
# HELP spring_security_filterchains_context_async_before_total  
# TYPE spring_security_filterchains_context_async_before_total counter
spring_security_filterchains_context_async_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 17026.0
# HELP spring_security_filterchains_context_holder_after_total  
# TYPE spring_security_filterchains_context_holder_after_total counter
spring_security_filterchains_context_holder_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 17025.0
# HELP spring_security_filterchains_context_holder_before_total  
# TYPE spring_security_filterchains_context_holder_before_total counter
spring_security_filterchains_context_holder_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 17026.0
# HELP spring_security_filterchains_context_servlet_after_total  
# TYPE spring_security_filterchains_context_servlet_after_total counter
spring_security_filterchains_context_servlet_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 17025.0
# HELP spring_security_filterchains_context_servlet_before_total  
# TYPE spring_security_filterchains_context_servlet_before_total counter
spring_security_filterchains_context_servlet_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 17026.0
# HELP spring_security_filterchains_header_after_total  
# TYPE spring_security_filterchains_header_after_total counter
spring_security_filterchains_header_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 17025.0
# HELP spring_security_filterchains_header_before_total  
# TYPE spring_security_filterchains_header_before_total counter
spring_security_filterchains_header_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 17026.0
# HELP spring_security_filterchains_logout_after_total  
# TYPE spring_security_filterchains_logout_after_total counter
spring_security_filterchains_logout_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 17025.0
# HELP spring_security_filterchains_logout_before_total  
# TYPE spring_security_filterchains_logout_before_total counter
spring_security_filterchains_logout_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 17026.0
# HELP spring_security_filterchains_requestcache_after_total  
# TYPE spring_security_filterchains_requestcache_after_total counter
spring_security_filterchains_requestcache_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 17025.0
# HELP spring_security_filterchains_requestcache_before_total  
# TYPE spring_security_filterchains_requestcache_before_total counter
spring_security_filterchains_requestcache_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 17026.0
# HELP spring_security_filterchains_seconds  
# TYPE spring_security_filterchains_seconds summary
spring_security_filterchains_seconds_count{error="none",spring_security_filterchain_position="11",spring_security_filterchain_size="11",spring_security_reached_filter_name="AuthorizationFilter",spring_security_reached_filter_section="before"} 17026
spring_security_filterchains_seconds_sum{error="none",spring_security_filterchain_position="11",spring_security_filterchain_size="11",spring_security_reached_filter_name="AuthorizationFilter",spring_security_reached_filter_section="before"} 176.174493243
spring_security_filterchains_seconds_count{error="none",spring_security_filterchain_position="11",spring_security_filterchain_size="11",spring_security_reached_filter_name="DisableEncodeUrlFilter",spring_security_reached_filter_section="after"} 17025
spring_security_filterchains_seconds_sum{error="none",spring_security_filterchain_position="11",spring_security_filterchain_size="11",spring_security_reached_filter_name="DisableEncodeUrlFilter",spring_security_reached_filter_section="after"} 210.831004854
# HELP spring_security_filterchains_seconds_max  
# TYPE spring_security_filterchains_seconds_max gauge
spring_security_filterchains_seconds_max{error="none",spring_security_filterchain_position="11",spring_security_filterchain_size="11",spring_security_reached_filter_name="AuthorizationFilter",spring_security_reached_filter_section="before"} 2.61313E-4
spring_security_filterchains_seconds_max{error="none",spring_security_filterchain_position="11",spring_security_filterchain_size="11",spring_security_reached_filter_name="DisableEncodeUrlFilter",spring_security_reached_filter_section="after"} 1.08105E-4
# HELP spring_security_filterchains_session_management_after_total  
# TYPE spring_security_filterchains_session_management_after_total counter
spring_security_filterchains_session_management_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 17025.0
# HELP spring_security_filterchains_session_management_before_total  
# TYPE spring_security_filterchains_session_management_before_total counter
spring_security_filterchains_session_management_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 17026.0
# HELP spring_security_filterchains_session_urlencoding_after_total  
# TYPE spring_security_filterchains_session_urlencoding_after_total counter
spring_security_filterchains_session_urlencoding_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 17025.0
# HELP spring_security_filterchains_session_urlencoding_before_total  
# TYPE spring_security_filterchains_session_urlencoding_before_total counter
spring_security_filterchains_session_urlencoding_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 17026.0
# HELP spring_security_http_secured_requests_active_seconds  
# TYPE spring_security_http_secured_requests_active_seconds summary
spring_security_http_secured_requests_active_seconds_count 1
spring_security_http_secured_requests_active_seconds_sum 0.002703507
# HELP spring_security_http_secured_requests_active_seconds_max  
# TYPE spring_security_http_secured_requests_active_seconds_max gauge
spring_security_http_secured_requests_active_seconds_max 0.002703807
# HELP spring_security_http_secured_requests_seconds  
# TYPE spring_security_http_secured_requests_seconds summary
spring_security_http_secured_requests_seconds_count{error="none"} 17025
spring_security_http_secured_requests_seconds_sum{error="none"} 4199.855707538
# HELP spring_security_http_secured_requests_seconds_max  
# TYPE spring_security_http_secured_requests_seconds_max gauge
spring_security_http_secured_requests_seconds_max{error="none"} 0.041810102
# HELP system_cpu_count The number of processors available to the Java virtual machine
# TYPE system_cpu_count gauge
system_cpu_count 4.0
# HELP system_cpu_usage The "recent cpu usage" of the system the application is running in
# TYPE system_cpu_usage gauge
system_cpu_usage 0.027079293530839467
# HELP system_load_average_1m The sum of the number of runnable entities queued to available processors and the number of runnable entities running on the available processors averaged over a period of time
# TYPE system_load_average_1m gauge
system_load_average_1m 0.47509765625
# HELP tomcat_sessions_active_current_sessions  
# TYPE tomcat_sessions_active_current_sessions gauge
tomcat_sessions_active_current_sessions 0.0
# HELP tomcat_sessions_active_max_sessions  
# TYPE tomcat_sessions_active_max_sessions gauge
tomcat_sessions_active_max_sessions 0.0
# HELP tomcat_sessions_alive_max_seconds  
# TYPE tomcat_sessions_alive_max_seconds gauge
tomcat_sessions_alive_max_seconds 0.0
# HELP tomcat_sessions_created_sessions_total  
# TYPE tomcat_sessions_created_sessions_total counter
tomcat_sessions_created_sessions_total 0.0
# HELP tomcat_sessions_expired_sessions_total  
# TYPE tomcat_sessions_expired_sessions_total counter
tomcat_sessions_expired_sessions_total 0.0
# HELP tomcat_sessions_rejected_sessions_total  
# TYPE tomcat_sessions_rejected_sessions_total counter
tomcat_sessions_rejected_sessions_total 0.0
