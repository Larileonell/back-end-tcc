# HELP application_ready_time_seconds Time taken for the application to be ready to service requests
# TYPE application_ready_time_seconds gauge
application_ready_time_seconds{main_application_class="com.tcc.pedido_service.PedidoServiceApplication"} 52.514
# HELP application_started_time_seconds Time taken to start the application
# TYPE application_started_time_seconds gauge
application_started_time_seconds{main_application_class="com.tcc.pedido_service.PedidoServiceApplication"} 52.492
# HELP disk_free_bytes Usable space for path
# TYPE disk_free_bytes gauge
disk_free_bytes{path="/app/."} 1.014770343936E12
# HELP disk_total_bytes Total space for path
# TYPE disk_total_bytes gauge
disk_total_bytes{path="/app/."} 1.081101176832E12
# HELP executor_active_threads The approximate number of threads that are actively executing tasks
# TYPE executor_active_threads gauge
executor_active_threads{name="applicationTaskExecutor"} 0.0
# HELP executor_completed_tasks_total The approximate total number of tasks that have completed execution
# TYPE executor_completed_tasks_total counter
executor_completed_tasks_total{name="applicationTaskExecutor"} 0.0
# HELP executor_pool_core_threads The core number of threads for the pool
# TYPE executor_pool_core_threads gauge
executor_pool_core_threads{name="applicationTaskExecutor"} 8.0
# HELP executor_pool_max_threads The maximum allowed number of threads in the pool
# TYPE executor_pool_max_threads gauge
executor_pool_max_threads{name="applicationTaskExecutor"} 2.147483647E9
# HELP executor_pool_size_threads The current number of threads in the pool
# TYPE executor_pool_size_threads gauge
executor_pool_size_threads{name="applicationTaskExecutor"} 0.0
# HELP executor_queue_remaining_tasks The number of additional elements that this queue can ideally accept without blocking
# TYPE executor_queue_remaining_tasks gauge
executor_queue_remaining_tasks{name="applicationTaskExecutor"} 2.147483647E9
# HELP executor_queued_tasks The approximate number of tasks that are queued for execution
# TYPE executor_queued_tasks gauge
executor_queued_tasks{name="applicationTaskExecutor"} 0.0
# HELP hikaricp_connections Total connections
# TYPE hikaricp_connections gauge
hikaricp_connections{pool="HikariPool-1"} 10.0
# HELP hikaricp_connections_acquire_seconds Connection acquire time
# TYPE hikaricp_connections_acquire_seconds summary
hikaricp_connections_acquire_seconds_count{pool="HikariPool-1"} 14954
hikaricp_connections_acquire_seconds_sum{pool="HikariPool-1"} 161.768766783
# HELP hikaricp_connections_acquire_seconds_max Connection acquire time
# TYPE hikaricp_connections_acquire_seconds_max gauge
hikaricp_connections_acquire_seconds_max{pool="HikariPool-1"} 0.0
# HELP hikaricp_connections_active Active connections
# TYPE hikaricp_connections_active gauge
hikaricp_connections_active{pool="HikariPool-1"} 0.0
# HELP hikaricp_connections_creation_seconds Connection creation time
# TYPE hikaricp_connections_creation_seconds summary
hikaricp_connections_creation_seconds_count{pool="HikariPool-1"} 81
hikaricp_connections_creation_seconds_sum{pool="HikariPool-1"} 67.362
# HELP hikaricp_connections_creation_seconds_max Connection creation time
# TYPE hikaricp_connections_creation_seconds_max gauge
hikaricp_connections_creation_seconds_max{pool="HikariPool-1"} 0.04
# HELP hikaricp_connections_idle Idle connections
# TYPE hikaricp_connections_idle gauge
hikaricp_connections_idle{pool="HikariPool-1"} 10.0
# HELP hikaricp_connections_max Max connections
# TYPE hikaricp_connections_max gauge
hikaricp_connections_max{pool="HikariPool-1"} 10.0
# HELP hikaricp_connections_min Min connections
# TYPE hikaricp_connections_min gauge
hikaricp_connections_min{pool="HikariPool-1"} 10.0
# HELP hikaricp_connections_pending Pending threads
# TYPE hikaricp_connections_pending gauge
hikaricp_connections_pending{pool="HikariPool-1"} 0.0
# HELP hikaricp_connections_timeout_total Connection timeout total count
# TYPE hikaricp_connections_timeout_total counter
hikaricp_connections_timeout_total{pool="HikariPool-1"} 0.0
# HELP hikaricp_connections_usage_seconds Connection usage time
# TYPE hikaricp_connections_usage_seconds summary
hikaricp_connections_usage_seconds_count{pool="HikariPool-1"} 14954
hikaricp_connections_usage_seconds_sum{pool="HikariPool-1"} 413.031
# HELP hikaricp_connections_usage_seconds_max Connection usage time
# TYPE hikaricp_connections_usage_seconds_max gauge
hikaricp_connections_usage_seconds_max{pool="HikariPool-1"} 0.0
# HELP http_server_requests_active_seconds  
# TYPE http_server_requests_active_seconds summary
http_server_requests_active_seconds_count{exception="none",method="GET",outcome="SUCCESS",status="200",uri="UNKNOWN"} 1
http_server_requests_active_seconds_sum{exception="none",method="GET",outcome="SUCCESS",status="200",uri="UNKNOWN"} 0.004591782
http_server_requests_active_seconds_count{exception="none",method="POST",outcome="SUCCESS",status="200",uri="UNKNOWN"} 0
http_server_requests_active_seconds_sum{exception="none",method="POST",outcome="SUCCESS",status="200",uri="UNKNOWN"} 0.0
# HELP http_server_requests_active_seconds_max  
# TYPE http_server_requests_active_seconds_max gauge
http_server_requests_active_seconds_max{exception="none",method="GET",outcome="SUCCESS",status="200",uri="UNKNOWN"} 0.004593583
http_server_requests_active_seconds_max{exception="none",method="POST",outcome="SUCCESS",status="200",uri="UNKNOWN"} 0.0
# HELP http_server_requests_seconds  
# TYPE http_server_requests_seconds summary
http_server_requests_seconds_count{error="Forbidden",exception="Forbidden",method="POST",outcome="SERVER_ERROR",status="500",uri="/pedidos"} 200
http_server_requests_seconds_sum{error="Forbidden",exception="Forbidden",method="POST",outcome="SERVER_ERROR",status="500",uri="/pedidos"} 2.548596105
http_server_requests_seconds_count{error="IOException",exception="IOException",method="GET",outcome="SUCCESS",status="200",uri="/actuator/prometheus"} 46
http_server_requests_seconds_sum{error="IOException",exception="IOException",method="GET",outcome="SUCCESS",status="200",uri="/actuator/prometheus"} 620.754007735
http_server_requests_seconds_count{error="none",exception="none",method="GET",outcome="CLIENT_ERROR",status="400",uri="/pedidos/{id}"} 6999
http_server_requests_seconds_sum{error="none",exception="none",method="GET",outcome="CLIENT_ERROR",status="400",uri="/pedidos/{id}"} 2252.671578585
http_server_requests_seconds_count{error="none",exception="none",method="GET",outcome="CLIENT_ERROR",status="403",uri="/pedidos"} 115
http_server_requests_seconds_sum{error="none",exception="none",method="GET",outcome="CLIENT_ERROR",status="403",uri="/pedidos"} 26.888633893
http_server_requests_seconds_count{error="none",exception="none",method="GET",outcome="CLIENT_ERROR",status="403",uri="/pedidos/usuario/{userId}"} 99
http_server_requests_seconds_sum{error="none",exception="none",method="GET",outcome="CLIENT_ERROR",status="403",uri="/pedidos/usuario/{userId}"} 19.294948932
http_server_requests_seconds_count{error="none",exception="none",method="GET",outcome="CLIENT_ERROR",status="403",uri="/pedidos/{id}"} 11
http_server_requests_seconds_sum{error="none",exception="none",method="GET",outcome="CLIENT_ERROR",status="403",uri="/pedidos/{id}"} 7.954363997
http_server_requests_seconds_count{error="none",exception="none",method="GET",outcome="CLIENT_ERROR",status="403",uri="UNKNOWN"} 3
http_server_requests_seconds_sum{error="none",exception="none",method="GET",outcome="CLIENT_ERROR",status="403",uri="UNKNOWN"} 0.094925284
http_server_requests_seconds_count{error="none",exception="none",method="GET",outcome="REDIRECTION",status="302",uri="/swagger-ui.html"} 1
http_server_requests_seconds_sum{error="none",exception="none",method="GET",outcome="REDIRECTION",status="302",uri="/swagger-ui.html"} 0.077266099
http_server_requests_seconds_count{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/actuator/prometheus"} 2653
http_server_requests_seconds_sum{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/actuator/prometheus"} 77.881025623
http_server_requests_seconds_count{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/pedidos"} 7276
http_server_requests_seconds_sum{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/pedidos"} 2871.252376186
http_server_requests_seconds_count{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/pedidos/usuario/{userId}"} 7276
http_server_requests_seconds_sum{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/pedidos/usuario/{userId}"} 1552.779689346
http_server_requests_seconds_count{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/pedidos/{id}"} 401
http_server_requests_seconds_sum{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/pedidos/{id}"} 2.3853677
http_server_requests_seconds_count{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/swagger-ui*/**"} 6
http_server_requests_seconds_sum{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/swagger-ui*/**"} 0.144759191
http_server_requests_seconds_count{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/swagger-ui*/*swagger-initializer.js"} 1
http_server_requests_seconds_sum{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/swagger-ui*/*swagger-initializer.js"} 0.091649394
http_server_requests_seconds_count{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/v3/api-docs"} 1
http_server_requests_seconds_sum{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/v3/api-docs"} 0.518045645
http_server_requests_seconds_count{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/v3/api-docs/swagger-config"} 1
http_server_requests_seconds_sum{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/v3/api-docs/swagger-config"} 0.034861043
http_server_requests_seconds_count{error="none",exception="none",method="POST",outcome="CLIENT_ERROR",status="400",uri="/pedidos"} 7074
http_server_requests_seconds_sum{error="none",exception="none",method="POST",outcome="CLIENT_ERROR",status="400",uri="/pedidos"} 5911.473299121
http_server_requests_seconds_count{error="none",exception="none",method="POST",outcome="CLIENT_ERROR",status="403",uri="/pedidos"} 141
http_server_requests_seconds_sum{error="none",exception="none",method="POST",outcome="CLIENT_ERROR",status="403",uri="/pedidos"} 33.542827189
http_server_requests_seconds_count{error="none",exception="none",method="POST",outcome="SUCCESS",status="200",uri="/pedidos"} 1
http_server_requests_seconds_sum{error="none",exception="none",method="POST",outcome="SUCCESS",status="200",uri="/pedidos"} 1.208846862
# HELP http_server_requests_seconds_max  
# TYPE http_server_requests_seconds_max gauge
http_server_requests_seconds_max{error="Forbidden",exception="Forbidden",method="POST",outcome="SERVER_ERROR",status="500",uri="/pedidos"} 0.0
http_server_requests_seconds_max{error="IOException",exception="IOException",method="GET",outcome="SUCCESS",status="200",uri="/actuator/prometheus"} 0.0
http_server_requests_seconds_max{error="none",exception="none",method="GET",outcome="CLIENT_ERROR",status="400",uri="/pedidos/{id}"} 0.0
http_server_requests_seconds_max{error="none",exception="none",method="GET",outcome="CLIENT_ERROR",status="403",uri="/pedidos"} 0.0
http_server_requests_seconds_max{error="none",exception="none",method="GET",outcome="CLIENT_ERROR",status="403",uri="/pedidos/usuario/{userId}"} 0.0
http_server_requests_seconds_max{error="none",exception="none",method="GET",outcome="CLIENT_ERROR",status="403",uri="/pedidos/{id}"} 0.0
http_server_requests_seconds_max{error="none",exception="none",method="GET",outcome="CLIENT_ERROR",status="403",uri="UNKNOWN"} 0.0
http_server_requests_seconds_max{error="none",exception="none",method="GET",outcome="REDIRECTION",status="302",uri="/swagger-ui.html"} 0.0
http_server_requests_seconds_max{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/actuator/prometheus"} 0.013769365
http_server_requests_seconds_max{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/pedidos"} 0.0
http_server_requests_seconds_max{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/pedidos/usuario/{userId}"} 0.0
http_server_requests_seconds_max{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/pedidos/{id}"} 0.0
http_server_requests_seconds_max{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/swagger-ui*/**"} 0.0
http_server_requests_seconds_max{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/swagger-ui*/*swagger-initializer.js"} 0.0
http_server_requests_seconds_max{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/v3/api-docs"} 0.0
http_server_requests_seconds_max{error="none",exception="none",method="GET",outcome="SUCCESS",status="200",uri="/v3/api-docs/swagger-config"} 0.0
http_server_requests_seconds_max{error="none",exception="none",method="POST",outcome="CLIENT_ERROR",status="400",uri="/pedidos"} 0.0
http_server_requests_seconds_max{error="none",exception="none",method="POST",outcome="CLIENT_ERROR",status="403",uri="/pedidos"} 0.0
http_server_requests_seconds_max{error="none",exception="none",method="POST",outcome="SUCCESS",status="200",uri="/pedidos"} 0.0
# HELP jdbc_connections_active Current number of active connections that have been allocated from the data source.
# TYPE jdbc_connections_active gauge
jdbc_connections_active{name="dataSource"} 0.0
# HELP jdbc_connections_idle Number of established but idle connections.
# TYPE jdbc_connections_idle gauge
jdbc_connections_idle{name="dataSource"} 10.0
# HELP jdbc_connections_max Maximum number of active connections that can be allocated at the same time.
# TYPE jdbc_connections_max gauge
jdbc_connections_max{name="dataSource"} 10.0
# HELP jdbc_connections_min Minimum number of idle connections in the pool.
# TYPE jdbc_connections_min gauge
jdbc_connections_min{name="dataSource"} 10.0
# HELP jvm_info JVM version info
# TYPE jvm_info gauge
jvm_info{runtime="OpenJDK Runtime Environment",vendor="Eclipse Adoptium",version="17.0.16+8"} 1
# HELP jvm_buffer_count_buffers An estimate of the number of buffers in the pool
# TYPE jvm_buffer_count_buffers gauge
jvm_buffer_count_buffers{id="direct"} 35.0
jvm_buffer_count_buffers{id="mapped"} 0.0
jvm_buffer_count_buffers{id="mapped - 'non-volatile memory'"} 0.0
# HELP jvm_buffer_memory_used_bytes An estimate of the memory that the Java virtual machine is using for this buffer pool
# TYPE jvm_buffer_memory_used_bytes gauge
jvm_buffer_memory_used_bytes{id="direct"} 1.7108593E7
jvm_buffer_memory_used_bytes{id="mapped"} 0.0
jvm_buffer_memory_used_bytes{id="mapped - 'non-volatile memory'"} 0.0
# HELP jvm_buffer_total_capacity_bytes An estimate of the total capacity of the buffers in this pool
# TYPE jvm_buffer_total_capacity_bytes gauge
jvm_buffer_total_capacity_bytes{id="direct"} 1.7108592E7
jvm_buffer_total_capacity_bytes{id="mapped"} 0.0
jvm_buffer_total_capacity_bytes{id="mapped - 'non-volatile memory'"} 0.0
# HELP jvm_classes_loaded_classes The number of classes that are currently loaded in the Java virtual machine
# TYPE jvm_classes_loaded_classes gauge
jvm_classes_loaded_classes 22314.0
# HELP jvm_classes_unloaded_classes_total The number of classes unloaded in the Java virtual machine
# TYPE jvm_classes_unloaded_classes_total counter
jvm_classes_unloaded_classes_total 195.0
# HELP jvm_compilation_time_ms_total The approximate accumulated elapsed time spent in compilation
# TYPE jvm_compilation_time_ms_total counter
jvm_compilation_time_ms_total{compiler="HotSpot 64-Bit Tiered Compilers"} 763085.0
# HELP jvm_gc_live_data_size_bytes Size of long-lived heap memory pool after reclamation
# TYPE jvm_gc_live_data_size_bytes gauge
jvm_gc_live_data_size_bytes 4.0770048E7
# HELP jvm_gc_max_data_size_bytes Max size of long-lived heap memory pool
# TYPE jvm_gc_max_data_size_bytes gauge
jvm_gc_max_data_size_bytes 2.067791872E9
# HELP jvm_gc_memory_allocated_bytes_total Incremented for an increase in the size of the (young) heap memory pool after one GC to before the next
# TYPE jvm_gc_memory_allocated_bytes_total counter
jvm_gc_memory_allocated_bytes_total 2.6834108384E10
# HELP jvm_gc_memory_promoted_bytes_total Count of positive increases in the size of the old generation memory pool before GC to after GC
# TYPE jvm_gc_memory_promoted_bytes_total counter
jvm_gc_memory_promoted_bytes_total 3.5647488E7
# HELP jvm_gc_overhead An approximation of the percent of CPU time used by GC activities over the last lookback period or since monitoring began, whichever is shorter, in the range [0..1]
# TYPE jvm_gc_overhead gauge
jvm_gc_overhead 1.0E-5
# HELP jvm_gc_pause_seconds Time spent in GC pause
# TYPE jvm_gc_pause_seconds summary
jvm_gc_pause_seconds_count{action="end of minor GC",cause="G1 Evacuation Pause",gc="G1 Young Generation"} 276
jvm_gc_pause_seconds_sum{action="end of minor GC",cause="G1 Evacuation Pause",gc="G1 Young Generation"} 64.509
jvm_gc_pause_seconds_count{action="end of minor GC",cause="GCLocker Initiated GC",gc="G1 Young Generation"} 2
jvm_gc_pause_seconds_sum{action="end of minor GC",cause="GCLocker Initiated GC",gc="G1 Young Generation"} 0.073
jvm_gc_pause_seconds_count{action="end of minor GC",cause="Metadata GC Threshold",gc="G1 Young Generation"} 1
jvm_gc_pause_seconds_sum{action="end of minor GC",cause="Metadata GC Threshold",gc="G1 Young Generation"} 0.008
# HELP jvm_gc_pause_seconds_max Time spent in GC pause
# TYPE jvm_gc_pause_seconds_max gauge
jvm_gc_pause_seconds_max{action="end of minor GC",cause="G1 Evacuation Pause",gc="G1 Young Generation"} 0.0
jvm_gc_pause_seconds_max{action="end of minor GC",cause="GCLocker Initiated GC",gc="G1 Young Generation"} 0.0
jvm_gc_pause_seconds_max{action="end of minor GC",cause="Metadata GC Threshold",gc="G1 Young Generation"} 0.0
# HELP jvm_memory_committed_bytes The amount of memory in bytes that is committed for the Java virtual machine to use
# TYPE jvm_memory_committed_bytes gauge
jvm_memory_committed_bytes{area="heap",id="G1 Eden Space"} 4.41450496E8
jvm_memory_committed_bytes{area="heap",id="G1 Old Gen"} 1.317011456E9
jvm_memory_committed_bytes{area="heap",id="G1 Survivor Space"} 1048576.0
jvm_memory_committed_bytes{area="nonheap",id="CodeHeap 'non-nmethods'"} 2555904.0
jvm_memory_committed_bytes{area="nonheap",id="CodeHeap 'non-profiled nmethods'"} 1.9398656E7
jvm_memory_committed_bytes{area="nonheap",id="CodeHeap 'profiled nmethods'"} 3.0212096E7
jvm_memory_committed_bytes{area="nonheap",id="Compressed Class Space"} 1.5794176E7
jvm_memory_committed_bytes{area="nonheap",id="Metaspace"} 1.21831424E8
# HELP jvm_memory_max_bytes The maximum amount of memory in bytes that can be used for memory management
# TYPE jvm_memory_max_bytes gauge
jvm_memory_max_bytes{area="heap",id="G1 Eden Space"} -1.0
jvm_memory_max_bytes{area="heap",id="G1 Old Gen"} 2.067791872E9
jvm_memory_max_bytes{area="heap",id="G1 Survivor Space"} -1.0
jvm_memory_max_bytes{area="nonheap",id="CodeHeap 'non-nmethods'"} 5836800.0
jvm_memory_max_bytes{area="nonheap",id="CodeHeap 'non-profiled nmethods'"} 1.22912768E8
jvm_memory_max_bytes{area="nonheap",id="CodeHeap 'profiled nmethods'"} 1.22908672E8
jvm_memory_max_bytes{area="nonheap",id="Compressed Class Space"} 1.073741824E9
jvm_memory_max_bytes{area="nonheap",id="Metaspace"} -1.0
# HELP jvm_memory_usage_after_gc The percentage of long-lived heap pool used after the last GC event, in the range [0..1]
# TYPE jvm_memory_usage_after_gc gauge
jvm_memory_usage_after_gc{area="heap",pool="long-lived"} 0.029645258224518255
# HELP jvm_memory_used_bytes The amount of used memory
# TYPE jvm_memory_used_bytes gauge
jvm_memory_used_bytes{area="heap",id="G1 Eden Space"} 7.0254592E7
jvm_memory_used_bytes{area="heap",id="G1 Old Gen"} 6.1300224E7
jvm_memory_used_bytes{area="heap",id="G1 Survivor Space"} 848048.0
jvm_memory_used_bytes{area="nonheap",id="CodeHeap 'non-nmethods'"} 1551744.0
jvm_memory_used_bytes{area="nonheap",id="CodeHeap 'non-profiled nmethods'"} 1.899648E7
jvm_memory_used_bytes{area="nonheap",id="CodeHeap 'profiled nmethods'"} 2.4396544E7
jvm_memory_used_bytes{area="nonheap",id="Compressed Class Space"} 1.5422856E7
jvm_memory_used_bytes{area="nonheap",id="Metaspace"} 1.21109736E8
# HELP jvm_threads_daemon_threads The current number of live daemon threads
# TYPE jvm_threads_daemon_threads gauge
jvm_threads_daemon_threads 28.0
# HELP jvm_threads_live_threads The current number of live threads including both daemon and non-daemon threads
# TYPE jvm_threads_live_threads gauge
jvm_threads_live_threads 42.0
# HELP jvm_threads_peak_threads The peak live thread count since the Java virtual machine started or peak was reset
# TYPE jvm_threads_peak_threads gauge
jvm_threads_peak_threads 141.0
# HELP jvm_threads_started_threads_total The total number of application threads started in the JVM
# TYPE jvm_threads_started_threads_total counter
jvm_threads_started_threads_total 332.0
# HELP jvm_threads_states_threads The current number of threads
# TYPE jvm_threads_states_threads gauge
jvm_threads_states_threads{state="blocked"} 0.0
jvm_threads_states_threads{state="new"} 0.0
jvm_threads_states_threads{state="runnable"} 14.0
jvm_threads_states_threads{state="terminated"} 0.0
jvm_threads_states_threads{state="timed-waiting"} 22.0
jvm_threads_states_threads{state="waiting"} 6.0
# HELP kafka_app_info_start_time_ms Metric indicating start-time-ms
# TYPE kafka_app_info_start_time_ms gauge
kafka_app_info_start_time_ms{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 1.75914983164E12
# HELP kafka_consumer_commit_sync_time_ns_total The total time the consumer has spent in commitSync in nanoseconds
# TYPE kafka_consumer_commit_sync_time_ns_total counter
kafka_consumer_commit_sync_time_ns_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 4.7156431E7
# HELP kafka_consumer_committed_time_ns_total The total time the consumer has spent in committed in nanoseconds
# TYPE kafka_consumer_committed_time_ns_total counter
kafka_consumer_committed_time_ns_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
# HELP kafka_consumer_connection_close_total The total number of connections closed
# TYPE kafka_consumer_connection_close_total counter
kafka_consumer_connection_close_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 10.0
# HELP kafka_consumer_connection_close_rate The number of connections closed per second
# TYPE kafka_consumer_connection_close_rate gauge
kafka_consumer_connection_close_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
# HELP kafka_consumer_connection_count The current number of active connections.
# TYPE kafka_consumer_connection_count gauge
kafka_consumer_connection_count{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 2.0
# HELP kafka_consumer_connection_creation_total The total number of new connections established
# TYPE kafka_consumer_connection_creation_total counter
kafka_consumer_connection_creation_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 12.0
# HELP kafka_consumer_connection_creation_rate The number of new connections established per second
# TYPE kafka_consumer_connection_creation_rate gauge
kafka_consumer_connection_creation_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
# HELP kafka_consumer_coordinator_assigned_partitions The number of partitions currently assigned to this consumer
# TYPE kafka_consumer_coordinator_assigned_partitions gauge
kafka_consumer_coordinator_assigned_partitions{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 1.0
# HELP kafka_consumer_coordinator_commit_total The total number of commit calls
# TYPE kafka_consumer_coordinator_commit_total counter
kafka_consumer_coordinator_commit_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 1.0
# HELP kafka_consumer_coordinator_commit_latency_avg The average time taken for a commit request
# TYPE kafka_consumer_coordinator_commit_latency_avg gauge
kafka_consumer_coordinator_commit_latency_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
# HELP kafka_consumer_coordinator_commit_latency_max The max time taken for a commit request
# TYPE kafka_consumer_coordinator_commit_latency_max gauge
kafka_consumer_coordinator_commit_latency_max{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
# HELP kafka_consumer_coordinator_commit_rate The number of commit calls per second
# TYPE kafka_consumer_coordinator_commit_rate gauge
kafka_consumer_coordinator_commit_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
# HELP kafka_consumer_coordinator_failed_rebalance_total The total number of failed rebalance events
# TYPE kafka_consumer_coordinator_failed_rebalance_total counter
kafka_consumer_coordinator_failed_rebalance_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 1.0
# HELP kafka_consumer_coordinator_failed_rebalance_rate_per_hour The number of failed rebalance events per hour
# TYPE kafka_consumer_coordinator_failed_rebalance_rate_per_hour gauge
kafka_consumer_coordinator_failed_rebalance_rate_per_hour{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
# HELP kafka_consumer_coordinator_heartbeat_total The total number of heartbeats
# TYPE kafka_consumer_coordinator_heartbeat_total counter
kafka_consumer_coordinator_heartbeat_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 4371.0
# HELP kafka_consumer_coordinator_heartbeat_rate The number of heartbeats per second
# TYPE kafka_consumer_coordinator_heartbeat_rate gauge
kafka_consumer_coordinator_heartbeat_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.33486295423539625
# HELP kafka_consumer_coordinator_heartbeat_response_time_max The max time taken to receive a response to a heartbeat request
# TYPE kafka_consumer_coordinator_heartbeat_response_time_max gauge
kafka_consumer_coordinator_heartbeat_response_time_max{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 2.0
# HELP kafka_consumer_coordinator_join_total The total number of group joins
# TYPE kafka_consumer_coordinator_join_total counter
kafka_consumer_coordinator_join_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 1.0
# HELP kafka_consumer_coordinator_join_rate The number of group joins per second
# TYPE kafka_consumer_coordinator_join_rate gauge
kafka_consumer_coordinator_join_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
# HELP kafka_consumer_coordinator_join_time_avg The average time taken for a group rejoin
# TYPE kafka_consumer_coordinator_join_time_avg gauge
kafka_consumer_coordinator_join_time_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
# HELP kafka_consumer_coordinator_join_time_max The max time taken for a group rejoin
# TYPE kafka_consumer_coordinator_join_time_max gauge
kafka_consumer_coordinator_join_time_max{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
# HELP kafka_consumer_coordinator_last_heartbeat_seconds_ago The number of seconds since the last coordinator heartbeat was sent
# TYPE kafka_consumer_coordinator_last_heartbeat_seconds_ago gauge
kafka_consumer_coordinator_last_heartbeat_seconds_ago{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 2.0
# HELP kafka_consumer_coordinator_last_rebalance_seconds_ago The number of seconds since the last successful rebalance event
# TYPE kafka_consumer_coordinator_last_rebalance_seconds_ago gauge
kafka_consumer_coordinator_last_rebalance_seconds_ago{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 13502.0
# HELP kafka_consumer_coordinator_partition_assigned_latency_avg The average time taken for a partition-assigned rebalance listener callback
# TYPE kafka_consumer_coordinator_partition_assigned_latency_avg gauge
kafka_consumer_coordinator_partition_assigned_latency_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
# HELP kafka_consumer_coordinator_partition_assigned_latency_max The max time taken for a partition-assigned rebalance listener callback
# TYPE kafka_consumer_coordinator_partition_assigned_latency_max gauge
kafka_consumer_coordinator_partition_assigned_latency_max{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
# HELP kafka_consumer_coordinator_partition_lost_latency_avg The average time taken for a partition-lost rebalance listener callback
# TYPE kafka_consumer_coordinator_partition_lost_latency_avg gauge
kafka_consumer_coordinator_partition_lost_latency_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
# HELP kafka_consumer_coordinator_partition_lost_latency_max The max time taken for a partition-lost rebalance listener callback
# TYPE kafka_consumer_coordinator_partition_lost_latency_max gauge
kafka_consumer_coordinator_partition_lost_latency_max{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
# HELP kafka_consumer_coordinator_partition_revoked_latency_avg The average time taken for a partition-revoked rebalance listener callback
# TYPE kafka_consumer_coordinator_partition_revoked_latency_avg gauge
kafka_consumer_coordinator_partition_revoked_latency_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
# HELP kafka_consumer_coordinator_partition_revoked_latency_max The max time taken for a partition-revoked rebalance listener callback
# TYPE kafka_consumer_coordinator_partition_revoked_latency_max gauge
kafka_consumer_coordinator_partition_revoked_latency_max{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
# HELP kafka_consumer_coordinator_rebalance_total The total number of successful rebalance events, each event is composed of several failed re-trials until it succeeded
# TYPE kafka_consumer_coordinator_rebalance_total counter
kafka_consumer_coordinator_rebalance_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 1.0
# HELP kafka_consumer_coordinator_rebalance_latency_total The total number of milliseconds this consumer has spent in successful rebalances since creation
# TYPE kafka_consumer_coordinator_rebalance_latency_total counter
kafka_consumer_coordinator_rebalance_latency_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 3044.0
# HELP kafka_consumer_coordinator_rebalance_latency_avg The average time taken for a group to complete a successful rebalance, which may be composed of several failed re-trials until it succeeded
# TYPE kafka_consumer_coordinator_rebalance_latency_avg gauge
kafka_consumer_coordinator_rebalance_latency_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
# HELP kafka_consumer_coordinator_rebalance_latency_max The max time taken for a group to complete a successful rebalance, which may be composed of several failed re-trials until it succeeded
# TYPE kafka_consumer_coordinator_rebalance_latency_max gauge
kafka_consumer_coordinator_rebalance_latency_max{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
# HELP kafka_consumer_coordinator_rebalance_rate_per_hour The number of successful rebalance events per hour, each event is composed of several failed re-trials until it succeeded
# TYPE kafka_consumer_coordinator_rebalance_rate_per_hour gauge
kafka_consumer_coordinator_rebalance_rate_per_hour{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
# HELP kafka_consumer_coordinator_sync_total The total number of group syncs
# TYPE kafka_consumer_coordinator_sync_total counter
kafka_consumer_coordinator_sync_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 1.0
# HELP kafka_consumer_coordinator_sync_rate The number of group syncs per second
# TYPE kafka_consumer_coordinator_sync_rate gauge
kafka_consumer_coordinator_sync_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
# HELP kafka_consumer_coordinator_sync_time_avg The average time taken for a group sync
# TYPE kafka_consumer_coordinator_sync_time_avg gauge
kafka_consumer_coordinator_sync_time_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
# HELP kafka_consumer_coordinator_sync_time_max The max time taken for a group sync
# TYPE kafka_consumer_coordinator_sync_time_max gauge
kafka_consumer_coordinator_sync_time_max{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
# HELP kafka_consumer_failed_authentication_total The total number of connections with failed authentication
# TYPE kafka_consumer_failed_authentication_total counter
kafka_consumer_failed_authentication_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
# HELP kafka_consumer_failed_authentication_rate The number of connections with failed authentication per second
# TYPE kafka_consumer_failed_authentication_rate gauge
kafka_consumer_failed_authentication_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
# HELP kafka_consumer_failed_reauthentication_total The total number of failed re-authentication of connections
# TYPE kafka_consumer_failed_reauthentication_total counter
kafka_consumer_failed_reauthentication_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
# HELP kafka_consumer_failed_reauthentication_rate The number of failed re-authentication of connections per second
# TYPE kafka_consumer_failed_reauthentication_rate gauge
kafka_consumer_failed_reauthentication_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
# HELP kafka_consumer_fetch_manager_bytes_consumed_total The total number of bytes consumed for a topic
# TYPE kafka_consumer_fetch_manager_bytes_consumed_total counter
kafka_consumer_fetch_manager_bytes_consumed_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1",topic="pedido_criado"} 120.0
# HELP kafka_consumer_fetch_manager_bytes_consumed_rate The average number of bytes consumed per second for a topic
# TYPE kafka_consumer_fetch_manager_bytes_consumed_rate gauge
kafka_consumer_fetch_manager_bytes_consumed_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1",topic="pedido_criado"} 0.0
# HELP kafka_consumer_fetch_manager_fetch_total The total number of fetch requests.
# TYPE kafka_consumer_fetch_manager_fetch_total counter
kafka_consumer_fetch_manager_fetch_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 25370.0
# HELP kafka_consumer_fetch_manager_fetch_latency_avg The average time taken for a fetch request.
# TYPE kafka_consumer_fetch_manager_fetch_latency_avg gauge
kafka_consumer_fetch_manager_fetch_latency_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 501.08196721311475
# HELP kafka_consumer_fetch_manager_fetch_latency_max The max time taken for any fetch request.
# TYPE kafka_consumer_fetch_manager_fetch_latency_max gauge
kafka_consumer_fetch_manager_fetch_latency_max{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 503.0
# HELP kafka_consumer_fetch_manager_fetch_rate The number of fetch requests per second.
# TYPE kafka_consumer_fetch_manager_fetch_rate gauge
kafka_consumer_fetch_manager_fetch_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 2.0049301561216106
# HELP kafka_consumer_fetch_manager_fetch_size_avg The average number of bytes fetched per request for a topic
# TYPE kafka_consumer_fetch_manager_fetch_size_avg gauge
kafka_consumer_fetch_manager_fetch_size_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1",topic="pedido_criado"} NaN
# HELP kafka_consumer_fetch_manager_fetch_size_max The maximum number of bytes fetched per request for a topic
# TYPE kafka_consumer_fetch_manager_fetch_size_max gauge
kafka_consumer_fetch_manager_fetch_size_max{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1",topic="pedido_criado"} NaN
# HELP kafka_consumer_fetch_manager_fetch_throttle_time_avg The average throttle time in ms
# TYPE kafka_consumer_fetch_manager_fetch_throttle_time_avg gauge
kafka_consumer_fetch_manager_fetch_throttle_time_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
# HELP kafka_consumer_fetch_manager_fetch_throttle_time_max The maximum throttle time in ms
# TYPE kafka_consumer_fetch_manager_fetch_throttle_time_max gauge
kafka_consumer_fetch_manager_fetch_throttle_time_max{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
# HELP kafka_consumer_fetch_manager_preferred_read_replica The current read replica for the partition, or -1 if reading from leader
# TYPE kafka_consumer_fetch_manager_preferred_read_replica gauge
kafka_consumer_fetch_manager_preferred_read_replica{client_id="consumer-pedido-group-1",kafka_version="3.9.1",partition="0",spring_id="kafkaConsumerFactory.consumer-pedido-group-1",topic="pedido_criado"} -1.0
# HELP kafka_consumer_fetch_manager_records_consumed_total The total number of records consumed for a topic
# TYPE kafka_consumer_fetch_manager_records_consumed_total counter
kafka_consumer_fetch_manager_records_consumed_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1",topic="pedido_criado"} 1.0
# HELP kafka_consumer_fetch_manager_records_consumed_rate The average number of records consumed per second for a topic
# TYPE kafka_consumer_fetch_manager_records_consumed_rate gauge
kafka_consumer_fetch_manager_records_consumed_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1",topic="pedido_criado"} 0.0
# HELP kafka_consumer_fetch_manager_records_lag The latest lag of the partition
# TYPE kafka_consumer_fetch_manager_records_lag gauge
kafka_consumer_fetch_manager_records_lag{client_id="consumer-pedido-group-1",kafka_version="3.9.1",partition="0",spring_id="kafkaConsumerFactory.consumer-pedido-group-1",topic="pedido_criado"} 0.0
# HELP kafka_consumer_fetch_manager_records_lag_avg The average lag of the partition
# TYPE kafka_consumer_fetch_manager_records_lag_avg gauge
kafka_consumer_fetch_manager_records_lag_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",partition="0",spring_id="kafkaConsumerFactory.consumer-pedido-group-1",topic="pedido_criado"} NaN
# HELP kafka_consumer_fetch_manager_records_lag_max The max lag of the partition
# TYPE kafka_consumer_fetch_manager_records_lag_max gauge
kafka_consumer_fetch_manager_records_lag_max{client_id="consumer-pedido-group-1",kafka_version="3.9.1",partition="0",spring_id="kafkaConsumerFactory.consumer-pedido-group-1",topic="pedido_criado"} NaN
# HELP kafka_consumer_fetch_manager_records_lead The latest lead of the partition
# TYPE kafka_consumer_fetch_manager_records_lead gauge
kafka_consumer_fetch_manager_records_lead{client_id="consumer-pedido-group-1",kafka_version="3.9.1",partition="0",spring_id="kafkaConsumerFactory.consumer-pedido-group-1",topic="pedido_criado"} 1.0
# HELP kafka_consumer_fetch_manager_records_lead_avg The average lead of the partition
# TYPE kafka_consumer_fetch_manager_records_lead_avg gauge
kafka_consumer_fetch_manager_records_lead_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",partition="0",spring_id="kafkaConsumerFactory.consumer-pedido-group-1",topic="pedido_criado"} NaN
# HELP kafka_consumer_fetch_manager_records_lead_min The min lead of the partition
# TYPE kafka_consumer_fetch_manager_records_lead_min gauge
kafka_consumer_fetch_manager_records_lead_min{client_id="consumer-pedido-group-1",kafka_version="3.9.1",partition="0",spring_id="kafkaConsumerFactory.consumer-pedido-group-1",topic="pedido_criado"} NaN
# HELP kafka_consumer_fetch_manager_records_per_request_avg The average number of records in each request for a topic
# TYPE kafka_consumer_fetch_manager_records_per_request_avg gauge
kafka_consumer_fetch_manager_records_per_request_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1",topic="pedido_criado"} NaN
# HELP kafka_consumer_incoming_byte_total The total number of bytes read off all sockets
# TYPE kafka_consumer_incoming_byte_total counter
kafka_consumer_incoming_byte_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 617307.0
# HELP kafka_consumer_incoming_byte_rate The number of bytes read off all sockets per second
# TYPE kafka_consumer_incoming_byte_rate gauge
kafka_consumer_incoming_byte_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 47.285285460321155
# HELP kafka_consumer_io_ratio The fraction of time the I/O thread spent doing I/O
# TYPE kafka_consumer_io_ratio gauge
kafka_consumer_io_ratio{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 4.4151062399960903E-4
# HELP kafka_consumer_io_time_ns_total The total time the I/O thread spent doing I/O
# TYPE kafka_consumer_io_time_ns_total counter
kafka_consumer_io_time_ns_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 1.3013128868E10
# HELP kafka_consumer_io_time_ns_avg The average length of time for I/O per select call in nanoseconds.
# TYPE kafka_consumer_io_time_ns_avg gauge
kafka_consumer_io_time_ns_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 54915.73556231003
# HELP kafka_consumer_io_wait_ratio The fraction of time the I/O thread spent waiting
# TYPE kafka_consumer_io_wait_ratio gauge
kafka_consumer_io_wait_ratio{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.9974236379775913
# HELP kafka_consumer_io_wait_time_ns_total The total time the I/O thread spent waiting
# TYPE kafka_consumer_io_wait_time_ns_total counter
kafka_consumer_io_wait_time_ns_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 1.3219935957788E13
# HELP kafka_consumer_io_wait_time_ns_avg The average length of time the I/O thread spent waiting for a socket ready for reads or writes in nanoseconds.
# TYPE kafka_consumer_io_wait_time_ns_avg gauge
kafka_consumer_io_wait_time_ns_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 1.240610072993921E8
# HELP kafka_consumer_io_waittime_total *Deprecated* The total time the I/O thread spent waiting
# TYPE kafka_consumer_io_waittime_total counter
kafka_consumer_io_waittime_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 1.3219935957788E13
# HELP kafka_consumer_iotime_total *Deprecated* The total time the I/O thread spent doing I/O
# TYPE kafka_consumer_iotime_total counter
kafka_consumer_iotime_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 1.3013128868E10
# HELP kafka_consumer_last_poll_seconds_ago The number of seconds since the last poll() invocation.
# TYPE kafka_consumer_last_poll_seconds_ago gauge
kafka_consumer_last_poll_seconds_ago{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 1.0
# HELP kafka_consumer_network_io_total The total number of network operations (reads or writes) on all connections
# TYPE kafka_consumer_network_io_total counter
kafka_consumer_network_io_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 59721.0
# HELP kafka_consumer_network_io_rate The number of network operations (reads or writes) on all connections per second
# TYPE kafka_consumer_network_io_rate gauge
kafka_consumer_network_io_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 4.6627860908786145
# HELP kafka_consumer_node_incoming_byte_total The total number of incoming bytes
# TYPE kafka_consumer_node_incoming_byte_total counter
kafka_consumer_node_incoming_byte_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 638.0
kafka_consumer_node_incoming_byte_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 545272.0
kafka_consumer_node_incoming_byte_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 71397.0
# HELP kafka_consumer_node_incoming_byte_rate The number of incoming bytes per second
# TYPE kafka_consumer_node_incoming_byte_rate gauge
kafka_consumer_node_incoming_byte_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
kafka_consumer_node_incoming_byte_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 42.097666586480635
kafka_consumer_node_incoming_byte_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 5.357674372457585
# HELP kafka_consumer_node_outgoing_byte_total The total number of outgoing bytes
# TYPE kafka_consumer_node_outgoing_byte_total counter
kafka_consumer_node_outgoing_byte_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 253.0
kafka_consumer_node_outgoing_byte_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 1606365.0
kafka_consumer_node_outgoing_byte_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 517480.0
# HELP kafka_consumer_node_outgoing_byte_rate The number of outgoing bytes per second
# TYPE kafka_consumer_node_outgoing_byte_rate gauge
kafka_consumer_node_outgoing_byte_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
kafka_consumer_node_outgoing_byte_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 126.07082630691399
kafka_consumer_node_outgoing_byte_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 39.53705901241117
# HELP kafka_consumer_node_request_total The total number of requests sent
# TYPE kafka_consumer_node_request_total counter
kafka_consumer_node_request_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 4.0
kafka_consumer_node_request_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 25485.0
kafka_consumer_node_request_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 4384.0
# TYPE kafka_consumer_node_request_latency_avg gauge
kafka_consumer_node_request_latency_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
kafka_consumer_node_request_latency_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
kafka_consumer_node_request_latency_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
# TYPE kafka_consumer_node_request_latency_max gauge
kafka_consumer_node_request_latency_max{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
kafka_consumer_node_request_latency_max{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
kafka_consumer_node_request_latency_max{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
# HELP kafka_consumer_node_request_rate The number of requests sent per second
# TYPE kafka_consumer_node_request_rate gauge
kafka_consumer_node_request_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
kafka_consumer_node_request_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 2.001124227093873
kafka_consumer_node_request_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.3350598221390777
# HELP kafka_consumer_node_request_size_avg The average size of requests sent.
# TYPE kafka_consumer_node_request_size_avg gauge
kafka_consumer_node_request_size_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
kafka_consumer_node_request_size_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 63.0
kafka_consumer_node_request_size_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 118.0
# HELP kafka_consumer_node_request_size_max The maximum size of any request sent.
# TYPE kafka_consumer_node_request_size_max gauge
kafka_consumer_node_request_size_max{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
kafka_consumer_node_request_size_max{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 63.0
kafka_consumer_node_request_size_max{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 118.0
# HELP kafka_consumer_node_response_total The total number of responses received
# TYPE kafka_consumer_node_response_total counter
kafka_consumer_node_response_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 4.0
kafka_consumer_node_response_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 25464.0
kafka_consumer_node_response_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 4380.0
# HELP kafka_consumer_node_response_rate The number of responses received per second
# TYPE kafka_consumer_node_response_rate gauge
kafka_consumer_node_response_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node--1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
kafka_consumer_node_response_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-1001",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 2.0046507898324113
kafka_consumer_node_response_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",node_id="node-2147482646",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.33485464827859907
# HELP kafka_consumer_outgoing_byte_total The total number of outgoing bytes sent to all servers
# TYPE kafka_consumer_outgoing_byte_total counter
kafka_consumer_outgoing_byte_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 2124098.0
# HELP kafka_consumer_outgoing_byte_rate The number of outgoing bytes sent to all servers per second
# TYPE kafka_consumer_outgoing_byte_rate gauge
kafka_consumer_outgoing_byte_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 165.31557614360162
# HELP kafka_consumer_poll_idle_ratio_avg The average fraction of time the consumer's poll() is idle as opposed to waiting for the user code to process records.
# TYPE kafka_consumer_poll_idle_ratio_avg gauge
kafka_consumer_poll_idle_ratio_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.49999615423073074
# HELP kafka_consumer_reauthentication_latency_avg The average latency observed due to re-authentication
# TYPE kafka_consumer_reauthentication_latency_avg gauge
kafka_consumer_reauthentication_latency_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
# HELP kafka_consumer_reauthentication_latency_max The max latency observed due to re-authentication
# TYPE kafka_consumer_reauthentication_latency_max gauge
kafka_consumer_reauthentication_latency_max{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} NaN
# HELP kafka_consumer_request_total The total number of requests sent
# TYPE kafka_consumer_request_total counter
kafka_consumer_request_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 29873.0
# HELP kafka_consumer_request_rate The number of requests sent per second
# TYPE kafka_consumer_request_rate gauge
kafka_consumer_request_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 2.3313930454393073
# HELP kafka_consumer_request_size_avg The average size of requests sent.
# TYPE kafka_consumer_request_size_avg gauge
kafka_consumer_request_size_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 70.90849673202614
# HELP kafka_consumer_request_size_max The maximum size of any request sent.
# TYPE kafka_consumer_request_size_max gauge
kafka_consumer_request_size_max{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 118.0
# HELP kafka_consumer_response_total The total number of responses received
# TYPE kafka_consumer_response_total counter
kafka_consumer_response_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 29848.0
# HELP kafka_consumer_response_rate The number of responses received per second
# TYPE kafka_consumer_response_rate gauge
kafka_consumer_response_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 2.331477865532014
# HELP kafka_consumer_select_total The total number of times the I/O layer checked for new I/O to perform
# TYPE kafka_consumer_select_total counter
kafka_consumer_select_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 164647.0
# HELP kafka_consumer_select_rate The number of times the I/O layer checked for new I/O to perform per second
# TYPE kafka_consumer_select_rate gauge
kafka_consumer_select_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 8.03978348789756
# HELP kafka_consumer_successful_authentication_total The total number of connections with successful authentication
# TYPE kafka_consumer_successful_authentication_total counter
kafka_consumer_successful_authentication_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
# HELP kafka_consumer_successful_authentication_no_reauth_total The total number of connections with successful authentication where the client does not support re-authentication
# TYPE kafka_consumer_successful_authentication_no_reauth_total counter
kafka_consumer_successful_authentication_no_reauth_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
# HELP kafka_consumer_successful_authentication_rate The number of connections with successful authentication per second
# TYPE kafka_consumer_successful_authentication_rate gauge
kafka_consumer_successful_authentication_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
# HELP kafka_consumer_successful_reauthentication_total The total number of successful re-authentication of connections
# TYPE kafka_consumer_successful_reauthentication_total counter
kafka_consumer_successful_reauthentication_total{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
# HELP kafka_consumer_successful_reauthentication_rate The number of successful re-authentication of connections per second
# TYPE kafka_consumer_successful_reauthentication_rate gauge
kafka_consumer_successful_reauthentication_rate{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 0.0
# HELP kafka_consumer_time_between_poll_avg The average delay between invocations of poll() in milliseconds.
# TYPE kafka_consumer_time_between_poll_avg gauge
kafka_consumer_time_between_poll_avg{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 5000.75
# HELP kafka_consumer_time_between_poll_max The max delay between invocations of poll() in milliseconds.
# TYPE kafka_consumer_time_between_poll_max gauge
kafka_consumer_time_between_poll_max{client_id="consumer-pedido-group-1",kafka_version="3.9.1",spring_id="kafkaConsumerFactory.consumer-pedido-group-1"} 5001.0
# HELP logback_events_total Number of log events that were enabled by the effective log level
# TYPE logback_events_total counter
logback_events_total{level="debug"} 0.0
logback_events_total{level="error"} 200.0
logback_events_total{level="info"} 77.0
logback_events_total{level="trace"} 0.0
logback_events_total{level="warn"} 14073.0
# HELP pedidos_create_duration_seconds Tempo gasto no método create()
# TYPE pedidos_create_duration_seconds summary
pedidos_create_duration_seconds_count 201
pedidos_create_duration_seconds_sum 2.819226597
# HELP pedidos_create_duration_seconds_max Tempo gasto no método create()
# TYPE pedidos_create_duration_seconds_max gauge
pedidos_create_duration_seconds_max 0.0
# HELP pedidos_criados_total Número de pedidos criados
# TYPE pedidos_criados_total counter
pedidos_criados_total 1.0
# HELP pedidos_recebidos_kafka_total Pedidos recebidos via Kafka
# TYPE pedidos_recebidos_kafka_total counter
pedidos_recebidos_kafka_total 1.0
# HELP pedidos_recebidos_rabbitmq_total Pedidos recebidos via RabbitMQ
# TYPE pedidos_recebidos_rabbitmq_total counter
pedidos_recebidos_rabbitmq_total 0.0
# HELP process_cpu_time_ns_total The "cpu time" used by the Java Virtual Machine process
# TYPE process_cpu_time_ns_total counter
process_cpu_time_ns_total 1.02444E12
# HELP process_cpu_usage The "recent cpu usage" for the Java Virtual Machine process
# TYPE process_cpu_usage gauge
process_cpu_usage 0.006134969325153374
# HELP process_files_max_files The maximum file descriptor count
# TYPE process_files_max_files gauge
process_files_max_files 1048576.0
# HELP process_files_open_files The open file descriptor count
# TYPE process_files_open_files gauge
process_files_open_files 47.0
# HELP process_start_time_seconds Start time of the process since unix epoch.
# TYPE process_start_time_seconds gauge
process_start_time_seconds 1.759149774759E9
# HELP process_uptime_seconds The uptime of the Java virtual machine
# TYPE process_uptime_seconds gauge
process_uptime_seconds 13574.031
# HELP rabbitmq_acknowledged_total  
# TYPE rabbitmq_acknowledged_total counter
rabbitmq_acknowledged_total{name="rabbit"} 0.0
# HELP rabbitmq_acknowledged_published_total  
# TYPE rabbitmq_acknowledged_published_total counter
rabbitmq_acknowledged_published_total{name="rabbit"} 0.0
# HELP rabbitmq_channels  
# TYPE rabbitmq_channels gauge
rabbitmq_channels{name="rabbit"} 4.0
# HELP rabbitmq_connections  
# TYPE rabbitmq_connections gauge
rabbitmq_connections{name="rabbit"} 1.0
# HELP rabbitmq_consumed_total  
# TYPE rabbitmq_consumed_total counter
rabbitmq_consumed_total{name="rabbit"} 0.0
# HELP rabbitmq_failed_to_publish_total  
# TYPE rabbitmq_failed_to_publish_total counter
rabbitmq_failed_to_publish_total{name="rabbit"} 0.0
# HELP rabbitmq_not_acknowledged_published_total  
# TYPE rabbitmq_not_acknowledged_published_total counter
rabbitmq_not_acknowledged_published_total{name="rabbit"} 0.0
# HELP rabbitmq_published_total  
# TYPE rabbitmq_published_total counter
rabbitmq_published_total{name="rabbit"} 1.0
# HELP rabbitmq_rejected_total  
# TYPE rabbitmq_rejected_total counter
rabbitmq_rejected_total{name="rabbit"} 0.0
# HELP rabbitmq_requeued_total  
# TYPE rabbitmq_requeued_total counter
rabbitmq_requeued_total{name="rabbit"} 0.0
# HELP rabbitmq_unrouted_published_total  
# TYPE rabbitmq_unrouted_published_total counter
rabbitmq_unrouted_published_total{name="rabbit"} 0.0
# HELP spring_data_repository_invocations_seconds Duration of repository invocations
# TYPE spring_data_repository_invocations_seconds summary
spring_data_repository_invocations_seconds_count{exception="None",method="findAll",repository="PedidoRepository",state="SUCCESS"} 7276
spring_data_repository_invocations_seconds_sum{exception="None",method="findAll",repository="PedidoRepository",state="SUCCESS"} 223.122158448
spring_data_repository_invocations_seconds_count{exception="None",method="findById",repository="PedidoRepository",state="SUCCESS"} 401
spring_data_repository_invocations_seconds_sum{exception="None",method="findById",repository="PedidoRepository",state="SUCCESS"} 0.514859686
spring_data_repository_invocations_seconds_count{exception="None",method="findByUserId",repository="PedidoRepository",state="SUCCESS"} 7276
spring_data_repository_invocations_seconds_sum{exception="None",method="findByUserId",repository="PedidoRepository",state="SUCCESS"} 338.598255083
spring_data_repository_invocations_seconds_count{exception="None",method="save",repository="PedidoRepository",state="SUCCESS"} 1
spring_data_repository_invocations_seconds_sum{exception="None",method="save",repository="PedidoRepository",state="SUCCESS"} 0.261371027
# HELP spring_data_repository_invocations_seconds_max Duration of repository invocations
# TYPE spring_data_repository_invocations_seconds_max gauge
spring_data_repository_invocations_seconds_max{exception="None",method="findAll",repository="PedidoRepository",state="SUCCESS"} 0.0
spring_data_repository_invocations_seconds_max{exception="None",method="findById",repository="PedidoRepository",state="SUCCESS"} 0.0
spring_data_repository_invocations_seconds_max{exception="None",method="findByUserId",repository="PedidoRepository",state="SUCCESS"} 0.0
spring_data_repository_invocations_seconds_max{exception="None",method="save",repository="PedidoRepository",state="SUCCESS"} 0.0
# HELP spring_kafka_listener_seconds Kafka Listener Timer
# TYPE spring_kafka_listener_seconds summary
spring_kafka_listener_seconds_count{exception="none",name="org.springframework.kafka.KafkaListenerEndpointContainer#0-0",result="success"} 1
spring_kafka_listener_seconds_sum{exception="none",name="org.springframework.kafka.KafkaListenerEndpointContainer#0-0",result="success"} 0.024162268
# HELP spring_kafka_listener_seconds_max Kafka Listener Timer
# TYPE spring_kafka_listener_seconds_max gauge
spring_kafka_listener_seconds_max{exception="none",name="org.springframework.kafka.KafkaListenerEndpointContainer#0-0",result="success"} 0.0
# HELP spring_kafka_template_seconds KafkaTemplate Timer
# TYPE spring_kafka_template_seconds summary
spring_kafka_template_seconds_count{exception="none",name="kafkaTemplate",result="success"} 1
spring_kafka_template_seconds_sum{exception="none",name="kafkaTemplate",result="success"} 0.214392696
# HELP spring_kafka_template_seconds_max KafkaTemplate Timer
# TYPE spring_kafka_template_seconds_max gauge
spring_kafka_template_seconds_max{exception="none",name="kafkaTemplate",result="success"} 0.0
# HELP spring_security_authorizations_active_seconds  
# TYPE spring_security_authorizations_active_seconds summary
spring_security_authorizations_active_seconds_count{spring_security_authentication_type="n/a",spring_security_authorization_decision="unknown",spring_security_object="request"} 0
spring_security_authorizations_active_seconds_sum{spring_security_authentication_type="n/a",spring_security_authorization_decision="unknown",spring_security_object="request"} 0.0
# HELP spring_security_authorizations_active_seconds_max  
# TYPE spring_security_authorizations_active_seconds_max gauge
spring_security_authorizations_active_seconds_max{spring_security_authentication_type="n/a",spring_security_authorization_decision="unknown",spring_security_object="request"} 0.0
# HELP spring_security_authorizations_seconds  
# TYPE spring_security_authorizations_seconds summary
spring_security_authorizations_seconds_count{error="AccessDeniedException",spring_security_authentication_type="AnonymousAuthenticationToken",spring_security_authorization_decision="false",spring_security_object="request"} 15011
spring_security_authorizations_seconds_sum{error="AccessDeniedException",spring_security_authentication_type="AnonymousAuthenticationToken",spring_security_authorization_decision="false",spring_security_object="request"} 34.238531527
spring_security_authorizations_seconds_count{error="none",spring_security_authentication_type="UsernamePasswordAuthenticationToken",spring_security_authorization_decision="true",spring_security_object="request"} 29227
spring_security_authorizations_seconds_sum{error="none",spring_security_authentication_type="UsernamePasswordAuthenticationToken",spring_security_authorization_decision="true",spring_security_object="request"} 24.060463323
spring_security_authorizations_seconds_count{error="none",spring_security_authentication_type="n/a",spring_security_authorization_decision="true",spring_security_object="request"} 2710
spring_security_authorizations_seconds_sum{error="none",spring_security_authentication_type="n/a",spring_security_authorization_decision="true",spring_security_object="request"} 2.28631319
# HELP spring_security_authorizations_seconds_max  
# TYPE spring_security_authorizations_seconds_max gauge
spring_security_authorizations_seconds_max{error="AccessDeniedException",spring_security_authentication_type="AnonymousAuthenticationToken",spring_security_authorization_decision="false",spring_security_object="request"} 0.0
spring_security_authorizations_seconds_max{error="none",spring_security_authentication_type="UsernamePasswordAuthenticationToken",spring_security_authorization_decision="true",spring_security_object="request"} 0.0
spring_security_authorizations_seconds_max{error="none",spring_security_authentication_type="n/a",spring_security_authorization_decision="true",spring_security_object="request"} 4.32699E-4
# HELP spring_security_filterchains_JwtRequestFilter_after_total  
# TYPE spring_security_filterchains_JwtRequestFilter_after_total counter
spring_security_filterchains_JwtRequestFilter_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 46747.0
# HELP spring_security_filterchains_JwtRequestFilter_before_total  
# TYPE spring_security_filterchains_JwtRequestFilter_before_total counter
spring_security_filterchains_JwtRequestFilter_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 46948.0
# HELP spring_security_filterchains_access_exceptions_after_total  
# TYPE spring_security_filterchains_access_exceptions_after_total counter
spring_security_filterchains_access_exceptions_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 46747.0
# HELP spring_security_filterchains_access_exceptions_before_total  
# TYPE spring_security_filterchains_access_exceptions_before_total counter
spring_security_filterchains_access_exceptions_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 46948.0
# HELP spring_security_filterchains_active_seconds  
# TYPE spring_security_filterchains_active_seconds summary
spring_security_filterchains_active_seconds_count{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 0
spring_security_filterchains_active_seconds_sum{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 0.0
spring_security_filterchains_active_seconds_count{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 0
spring_security_filterchains_active_seconds_sum{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 0.0
# HELP spring_security_filterchains_active_seconds_max  
# TYPE spring_security_filterchains_active_seconds_max gauge
spring_security_filterchains_active_seconds_max{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 0.0
spring_security_filterchains_active_seconds_max{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 0.0
# HELP spring_security_filterchains_authentication_anonymous_after_total  
# TYPE spring_security_filterchains_authentication_anonymous_after_total counter
spring_security_filterchains_authentication_anonymous_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 46747.0
# HELP spring_security_filterchains_authentication_anonymous_before_total  
# TYPE spring_security_filterchains_authentication_anonymous_before_total counter
spring_security_filterchains_authentication_anonymous_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 46948.0
# HELP spring_security_filterchains_authorization_after_total  
# TYPE spring_security_filterchains_authorization_after_total counter
spring_security_filterchains_authorization_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 31736.0
# HELP spring_security_filterchains_authorization_before_total  
# TYPE spring_security_filterchains_authorization_before_total counter
spring_security_filterchains_authorization_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 46948.0
# HELP spring_security_filterchains_context_async_after_total  
# TYPE spring_security_filterchains_context_async_after_total counter
spring_security_filterchains_context_async_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 46747.0
# HELP spring_security_filterchains_context_async_before_total  
# TYPE spring_security_filterchains_context_async_before_total counter
spring_security_filterchains_context_async_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 46948.0
# HELP spring_security_filterchains_context_holder_after_total  
# TYPE spring_security_filterchains_context_holder_after_total counter
spring_security_filterchains_context_holder_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 46747.0
# HELP spring_security_filterchains_context_holder_before_total  
# TYPE spring_security_filterchains_context_holder_before_total counter
spring_security_filterchains_context_holder_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 46948.0
# HELP spring_security_filterchains_context_servlet_after_total  
# TYPE spring_security_filterchains_context_servlet_after_total counter
spring_security_filterchains_context_servlet_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 46747.0
# HELP spring_security_filterchains_context_servlet_before_total  
# TYPE spring_security_filterchains_context_servlet_before_total counter
spring_security_filterchains_context_servlet_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 46948.0
# HELP spring_security_filterchains_header_after_total  
# TYPE spring_security_filterchains_header_after_total counter
spring_security_filterchains_header_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 46747.0
# HELP spring_security_filterchains_header_before_total  
# TYPE spring_security_filterchains_header_before_total counter
spring_security_filterchains_header_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 46948.0
# HELP spring_security_filterchains_logout_after_total  
# TYPE spring_security_filterchains_logout_after_total counter
spring_security_filterchains_logout_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 46747.0
# HELP spring_security_filterchains_logout_before_total  
# TYPE spring_security_filterchains_logout_before_total counter
spring_security_filterchains_logout_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 46948.0
# HELP spring_security_filterchains_requestcache_after_total  
# TYPE spring_security_filterchains_requestcache_after_total counter
spring_security_filterchains_requestcache_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 46747.0
# HELP spring_security_filterchains_requestcache_before_total  
# TYPE spring_security_filterchains_requestcache_before_total counter
spring_security_filterchains_requestcache_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 46948.0
# HELP spring_security_filterchains_seconds  
# TYPE spring_security_filterchains_seconds summary
spring_security_filterchains_seconds_count{error="ServletException",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 200
spring_security_filterchains_seconds_sum{error="ServletException",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 0.018358728
spring_security_filterchains_seconds_count{error="none",spring_security_filterchain_position="12",spring_security_filterchain_size="12",spring_security_reached_filter_name="AuthorizationFilter",spring_security_reached_filter_section="before"} 46948
spring_security_filterchains_seconds_sum{error="none",spring_security_filterchain_position="12",spring_security_filterchain_size="12",spring_security_reached_filter_name="AuthorizationFilter",spring_security_reached_filter_section="before"} 10185.986603881
spring_security_filterchains_seconds_count{error="none",spring_security_filterchain_position="12",spring_security_filterchain_size="12",spring_security_reached_filter_name="DisableEncodeUrlFilter",spring_security_reached_filter_section="after"} 46747
spring_security_filterchains_seconds_sum{error="none",spring_security_filterchain_position="12",spring_security_filterchain_size="12",spring_security_reached_filter_name="DisableEncodeUrlFilter",spring_security_reached_filter_section="after"} 182.416528033
# HELP spring_security_filterchains_seconds_max  
# TYPE spring_security_filterchains_seconds_max gauge
spring_security_filterchains_seconds_max{error="ServletException",spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 0.0
spring_security_filterchains_seconds_max{error="none",spring_security_filterchain_position="12",spring_security_filterchain_size="12",spring_security_reached_filter_name="AuthorizationFilter",spring_security_reached_filter_section="before"} 5.06699E-4
spring_security_filterchains_seconds_max{error="none",spring_security_filterchain_position="12",spring_security_filterchain_size="12",spring_security_reached_filter_name="DisableEncodeUrlFilter",spring_security_reached_filter_section="after"} 1.56406E-4
# HELP spring_security_filterchains_session_management_after_total  
# TYPE spring_security_filterchains_session_management_after_total counter
spring_security_filterchains_session_management_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 46747.0
# HELP spring_security_filterchains_session_management_before_total  
# TYPE spring_security_filterchains_session_management_before_total counter
spring_security_filterchains_session_management_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 46948.0
# HELP spring_security_filterchains_session_urlencoding_after_total  
# TYPE spring_security_filterchains_session_urlencoding_after_total counter
spring_security_filterchains_session_urlencoding_after_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="after"} 46747.0
# HELP spring_security_filterchains_session_urlencoding_before_total  
# TYPE spring_security_filterchains_session_urlencoding_before_total counter
spring_security_filterchains_session_urlencoding_before_total{spring_security_filterchain_position="0",spring_security_filterchain_size="0",spring_security_reached_filter_name="none",spring_security_reached_filter_section="before"} 46948.0
# HELP spring_security_http_secured_requests_active_seconds  
# TYPE spring_security_http_secured_requests_active_seconds summary
spring_security_http_secured_requests_active_seconds_count 1
spring_security_http_secured_requests_active_seconds_sum 0.00455248
# HELP spring_security_http_secured_requests_active_seconds_max  
# TYPE spring_security_http_secured_requests_active_seconds_max gauge
spring_security_http_secured_requests_active_seconds_max 0.00455298
# HELP spring_security_http_secured_requests_seconds  
# TYPE spring_security_http_secured_requests_seconds summary
spring_security_http_secured_requests_seconds_count{error="ServletException"} 200
spring_security_http_secured_requests_seconds_sum{error="ServletException"} 2.035873512
spring_security_http_secured_requests_seconds_count{error="none"} 31736
spring_security_http_secured_requests_seconds_sum{error="none"} 2848.68419856
# HELP spring_security_http_secured_requests_seconds_max  
# TYPE spring_security_http_secured_requests_seconds_max gauge
spring_security_http_secured_requests_seconds_max{error="ServletException"} 0.0
spring_security_http_secured_requests_seconds_max{error="none"} 0.012678489
# HELP system_cpu_count The number of processors available to the Java virtual machine
# TYPE system_cpu_count gauge
system_cpu_count 4.0
# HELP system_cpu_usage The "recent cpu usage" of the system the application is running in
# TYPE system_cpu_usage gauge
system_cpu_usage 0.15801906426906426
# HELP system_load_average_1m The sum of the number of runnable entities queued to available processors and the number of runnable entities running on the available processors averaged over a period of time
# TYPE system_load_average_1m gauge
system_load_average_1m 0.43701171875
# HELP tomcat_sessions_active_current_sessions  
# TYPE tomcat_sessions_active_current_sessions gauge
tomcat_sessions_active_current_sessions 0.0
# HELP tomcat_sessions_active_max_sessions  
# TYPE tomcat_sessions_active_max_sessions gauge
tomcat_sessions_active_max_sessions 0.0
# HELP tomcat_sessions_alive_max_seconds  
# TYPE tomcat_sessions_alive_max_seconds gauge
tomcat_sessions_alive_max_seconds 0.0
# HELP tomcat_sessions_created_sessions_total  
# TYPE tomcat_sessions_created_sessions_total counter
tomcat_sessions_created_sessions_total 0.0
# HELP tomcat_sessions_expired_sessions_total  
# TYPE tomcat_sessions_expired_sessions_total counter
tomcat_sessions_expired_sessions_total 0.0
# HELP tomcat_sessions_rejected_sessions_total  
# TYPE tomcat_sessions_rejected_sessions_total counter
tomcat_sessions_rejected_sessions_total 0.0
