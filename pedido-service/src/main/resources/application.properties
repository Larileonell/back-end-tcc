spring.application.name=pedido-service
server.port=8087

spring.datasource.url=jdbc:postgresql://postgres-pedido:5432/pedidodb
spring.datasource.username=pedido
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Kafka
spring.kafka.bootstrap-servers=kafka:9092
app.kafka.topic.pedido-criado=pedido.criado
spring.kafka.consumer.group-id=pedido-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# RabbitMQ
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.listener.simple.acknowledge-mode=auto
spring.rabbitmq.listener.simple.concurrency=3
spring.rabbitmq.listener.simple.max-concurrency=10

app.rabbitmq.exchange.pedido=pedido.exchange
app.rabbitmq.queue.pedido-criado=pedido.criado
app.rabbitmq.routing-key.pedido=pedido.criado

# JWT
jwt.secret=meusegredojwt123
jwt.expiration=86400000

# URLs dos outros microsservi\u00E7os (rede interna Docker)
app.produto-service.url=http://produto-service:8086
app.user-service.url=http://user-service:8085

# Actuator e m\u00E9tricas
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.metrics.export.prometheus.enabled=true

# ------------------------
# Swagger / SpringDoc
# ------------------------
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html