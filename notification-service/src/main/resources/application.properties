spring.application.name=notification-service
server.port=8089

# H2 (pode trocar pra Postgres depois)
spring.datasource.url=jdbc:h2:mem:notificationsdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=update
spring.h2.console.enabled=true

# Kafka
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=notification-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# T\u00F3picos
app.kafka.topic.pedido-criado=pedido.criado
app.kafka.topic.pagamento-processado=pagamento.processado

# RabbitMQ
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# Exchanges/Queues/RKs (iguais aos demais servi\u00E7os)
app.rabbitmq.exchange.pedido=pedido.exchange
app.rabbitmq.queue.pedido-criado=pedido.criado
app.rabbitmq.routing-key.pedido=pedido.criado

app.rabbitmq.exchange.pagamento=pagamento.exchange
app.rabbitmq.queue.pagamento-processado=pagamento.processado
app.rabbitmq.routing-key.pagamento=pagamento.processado

# Toggles (habilita/desabilita consumidores)
app.consumers.kafka.enabled=true
app.consumers.rabbitmq.enabled=true

# Actuator
management.endpoints.web.exposure.include=health,info,metrics
