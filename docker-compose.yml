version: "3.8"

services:
  # ------------------------
  # Infra
  # ------------------------
  zookeeper:
    image: bitnami/zookeeper:3.9
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.7
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true

  kafdrop:
    image: obsidiandynamics/kafdrop
    depends_on:
      - kafka
    ports:
      - "19000:9000"
    environment:
      - KAFKA_BROKERCONNECT=kafka:9092

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    ports:
      - "3000:3000"

  # ------------------------
  # PostgreSQL Databases
  # ------------------------
  postgres-user:
    image: postgres:15
    container_name: postgres-user
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - user_data:/var/lib/postgresql/data

  postgres-produto:
    image: postgres:15
    container_name: postgres-produto
    environment:
      POSTGRES_DB: produtodb
      POSTGRES_USER: produto
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    volumes:
      - produto_data:/var/lib/postgresql/data

  postgres-pedido:
    image: postgres:15
    container_name: postgres-pedido
    environment:
      POSTGRES_DB: pedidodb
      POSTGRES_USER: pedido
      POSTGRES_PASSWORD: password
    ports:
      - "5435:5432"
    volumes:
      - pedido_data:/var/lib/postgresql/data

  postgres-pagamento:
    image: postgres:15
    container_name: postgres-pagamento
    environment:
      POSTGRES_DB: pagamentodb
      POSTGRES_USER: pagamento
      POSTGRES_PASSWORD: password
    ports:
      - "5436:5432"
    volumes:
      - pagamento_data:/var/lib/postgresql/data

  postgres-notification:
    image: postgres:15
    container_name: postgres-notification
    environment:
      POSTGRES_DB: notificationdb
      POSTGRES_USER: notification
      POSTGRES_PASSWORD: password
    ports:
      - "5437:5432"
    volumes:
      - notification_data:/var/lib/postgresql/data

  # ------------------------
  # Microservices
  # ------------------------
  user-service:
    build: ./user-service
    container_name: user-service
    depends_on:
      - postgres-user
    ports:
      - "8085:8085"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-user:5432/userdb
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=*
      - MANAGEMENT_ENDPOINTS_WEB_BASEPATH=/actuator

  produto-service:
    build: ./produto-service
    container_name: produto-service
    depends_on:
      - postgres-produto
    ports:
      - "8086:8086"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-produto:5432/produtodb
      - SPRING_DATASOURCE_USERNAME=produto
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=*
      - MANAGEMENT_ENDPOINTS_WEB_BASEPATH=/actuator

  pedido-service:
    build: ./pedido-service
    container_name: pedido-service
    depends_on:
      - kafka
      - rabbitmq
      - postgres-pedido
    ports:
      - "8087:8087"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-pedido:5432/pedidodb
      - SPRING_DATASOURCE_USERNAME=pedido
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=*
      - MANAGEMENT_ENDPOINTS_WEB_BASEPATH=/actuator

  pagamento-service:
    build: ./pagamento-service
    container_name: pagamento-service
    depends_on:
      - kafka
      - rabbitmq
      - postgres-pagamento
    ports:
      - "8088:8088"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-pagamento:5432/pagamentodb
      - SPRING_DATASOURCE_USERNAME=pagamento
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=*
      - MANAGEMENT_ENDPOINTS_WEB_BASEPATH=/actuator

  notification-service:
    build: ./notification-service
    container_name: notification-service
    depends_on:
      - kafka
      - rabbitmq
      - postgres-notification
    ports:
      - "8089:8089"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-notification:5432/notificationdb
      - SPRING_DATASOURCE_USERNAME=notification
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=*
      - MANAGEMENT_ENDPOINTS_WEB_BASEPATH=/actuator

# ------------------------
# Volumes
# ------------------------
volumes:
  user_data:
  produto_data:
  pedido_data:
  pagamento_data:
  notification_data:
